{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Desktop\\\\Coding\\\\new\\\\client\\\\src\\\\pages\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport SkillsList from '../components/SkillsList';\nimport SkillForm from '../components/SkillForm';\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  var _profile$skills;\n\n  const {\n    profileId\n  } = useParams(); // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n\n  const {\n    loading,\n    data\n  } = useQuery(profileId ? QUERY_SINGLE_PROFILE : QUERY_ME, {\n    variables: {\n      profileId: profileId\n    }\n  }); // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n\n  const profile = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.profile) || {}; // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!(profile === null || profile === void 0 ? void 0 : profile.name)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see your profile page. Use the navigation links above to sign up or log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-header\",\n      children: [profileId ? `${profile.name}'s` : 'Your', \" friends have endorsed these skills...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), ((_profile$skills = profile.skills) === null || _profile$skills === void 0 ? void 0 : _profile$skills.length) > 0 && /*#__PURE__*/_jsxDEV(SkillsList, {\n      skills: profile.skills,\n      isLoggedInUser: !profileId && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 p-4\",\n      style: {\n        border: '1px dotted #1a1a1a'\n      },\n      children: /*#__PURE__*/_jsxDEV(SkillForm, {\n        profileId: profile._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"+qO3szEziX/CChFOT/h122X6Myk=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/new/client/src/pages/Profile.js"],"names":["React","Redirect","useParams","useQuery","SkillsList","SkillForm","QUERY_SINGLE_PROFILE","QUERY_ME","Auth","Profile","profileId","loading","data","variables","profile","me","loggedIn","getProfile","_id","name","skills","length","border"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,kBAA/C;AAEA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAgBR,SAAS,EAA/B,CADoB,CAGpB;;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBT,QAAQ,CAChCO,SAAS,GAAGJ,oBAAH,GAA0BC,QADH,EAEhC;AACEM,IAAAA,SAAS,EAAE;AAAEH,MAAAA,SAAS,EAAEA;AAAb;AADb,GAFgC,CAAlC,CAJoB,CAWpB;;AACA,QAAMI,OAAO,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,EAAN,MAAYH,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEE,OAAlB,KAA6B,EAA7C,CAZoB,CAcpB;;AACA,MAAIN,IAAI,CAACQ,QAAL,MAAmBR,IAAI,CAACS,UAAL,GAAkBL,IAAlB,CAAuBM,GAAvB,KAA+BR,SAAtD,EAAiE;AAC/D,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,EAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,IAAV,CAAJ,EAAoB;AAClB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,iBACGT,SAAS,GAAI,GAAEI,OAAO,CAACK,IAAK,IAAnB,GAAyB,MADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMG,oBAAAL,OAAO,CAACM,MAAR,oEAAgBC,MAAhB,IAAyB,CAAzB,iBACC,QAAC,UAAD;AACE,MAAA,MAAM,EAAEP,OAAO,CAACM,MADlB;AAEE,MAAA,cAAc,EAAE,CAACV,SAAD,IAAc;AAFhC;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAER,OAAO,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAnDD;;GAAMT,O;UACkBP,S,EAGIC,Q;;;KAJtBM,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport SkillsList from '../components/SkillsList';\nimport SkillForm from '../components/SkillForm';\n\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { profileId } = useParams();\n\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    profileId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n    {\n      variables: { profileId: profileId },\n    }\n  );\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const profile = data?.me || data?.profile || {};\n\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n    return <Redirect to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!profile?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"card-header\">\n        {profileId ? `${profile.name}'s` : 'Your'} friends have endorsed these\n        skills...\n      </h2>\n\n      {profile.skills?.length > 0 && (\n        <SkillsList\n          skills={profile.skills}\n          isLoggedInUser={!profileId && true}\n        />\n      )}\n\n      <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <SkillForm profileId={profile._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}