{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Desktop\\\\Coding\\\\mycookbook prototype\\\\mycookbookver3\\\\client\\\\src\\\\pages\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, useParams, Link } from 'react-router-dom'; // IMPORTING EVERYTHING FOR QUERIES\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SINGLE_USER, QUERY_MYPROFILE } from '../utils/queries'; // IMPORTING EVERYTHING FOR MUTATIONS\n\nimport { useMutation } from '@apollo/client';\nimport { REMOVE_RECIPE } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(userId ? QUERY_SINGLE_USER : QUERY_MYPROFILE, {\n    variables: {\n      userId: userId\n    }\n  });\n  const user = (data === null || data === void 0 ? void 0 : data.myprofile) || (data === null || data === void 0 ? void 0 : data.user) || {};\n  const recipes = user.recipes; // console.log(user);\n  // console.log(\"hi\");\n  // console.log(recipes);\n  // THESE NEXT LINES OF CODE SHOULD BE ABLE TO DELETE ANY RECIPES WITHIN\n  // THE PROFILE PAGE WHICH MEANS ANY RECIPE HELD IN THE USERS RECIPES ARRAY\n  // THIS TECHNICALLY SHOULD'T DELETE ANY DUPLICATES OR WHEN A USER ADDS ANOTHER\n  // USERS RECIPE OR BASIALLY IT WONT DELETE THE ORIGINAL POST... I THINK\n\n  const [removeRecipe, {\n    error,\n    removedRecipe\n  }] = useMutation(REMOVE_RECIPE);\n  const [recipeId, setRecipeID] = useState('');\n\n  const handleDelete = async event => {\n    event.preventDefault();\n    let recipeID = event.target.id;\n    setRecipeID(recipeID);\n    console.log(\"recipeID\");\n    console.log(recipeId);\n\n    try {\n      // const { removedRecipe } = await removeRecipe({\n      //     variables: { recipeId },\n      // });\n      console.log(\"success recipe removed\");\n      console.log();\n    } catch (e) {\n      console.error(e);\n      console.log(\"it didnt work\");\n    }\n  };\n\n  if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/myprofile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!(user === null || user === void 0 ? void 0 : user.username)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see your profile page. Use the navigation links above to sign up or log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this);\n  } //     let testsample =    `An ambulance takes Perry away, and the police demand Lori's help to catch Max\n  // Later that night, Max returns and kills the officers watching the house\n  // In an attempt to get him back, Jarret kidnaps Lori and Spike in hopes that Max will follow them to the EMAX building which he does\n  // She first discovers him in the laboratory. Max relinquishes his aggressive, homicidal nature and begins to kiss Lori's hand\n  // Jarret shoots Max with a shotgun before being knocked onto a large electrical cage, which kills him\n  // Lori pets Max's head as he dies`\n  //     let result = testsample.split(\"\\n\");\n  //     const sentencearray = [];\n  //     for (let a = 0; a < result.length; a++) {\n  //         sentencearray.push(result[a]);\n  //     };\n  //     console.log(\"hi\");\n  //     console.log(sentencearray);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userprofile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usersrecipes\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe._id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipeinfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Servings: \", recipe.servings]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Time: \", recipe.totalTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientslist\",\n            children: recipe.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: ingredient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: recipe._id,\n            onClick: handleDelete,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)]\n      }, recipe._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Profile, \"EI/EDmFLipBbgRhDAI3EaKJ5u7k=\", false, function () {\n  return [useParams, useQuery, useMutation];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/mycookbook prototype/mycookbookver3/client/src/pages/Profile.js"],"names":["React","useState","Redirect","useParams","Link","useQuery","QUERY_SINGLE_USER","QUERY_MYPROFILE","useMutation","REMOVE_RECIPE","Auth","Profile","userId","loading","data","variables","user","myprofile","recipes","removeRecipe","error","removedRecipe","recipeId","setRecipeID","handleDelete","event","preventDefault","recipeID","target","id","console","log","e","loggedIn","getProfile","_id","username","map","recipe","title","servings","totalTime","ingredients","ingredient"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect, useParams, Link } from 'react-router-dom';\r\n\r\n// IMPORTING EVERYTHING FOR QUERIES\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_SINGLE_USER, QUERY_MYPROFILE } from '../utils/queries';\r\n\r\n// IMPORTING EVERYTHING FOR MUTATIONS\r\nimport { useMutation } from '@apollo/client';\r\nimport { REMOVE_RECIPE } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n\r\n    const { userId } = useParams();\r\n    const { loading, data } = useQuery(\r\n        userId ? QUERY_SINGLE_USER : QUERY_MYPROFILE,\r\n        {\r\n            variables: { userId: userId },\r\n        }\r\n    );\r\n    const user = data?.myprofile || data?.user || {};\r\n    const recipes = user.recipes;    \r\n    // console.log(user);\r\n    // console.log(\"hi\");\r\n    // console.log(recipes);\r\n    \r\n    // THESE NEXT LINES OF CODE SHOULD BE ABLE TO DELETE ANY RECIPES WITHIN\r\n    // THE PROFILE PAGE WHICH MEANS ANY RECIPE HELD IN THE USERS RECIPES ARRAY\r\n    // THIS TECHNICALLY SHOULD'T DELETE ANY DUPLICATES OR WHEN A USER ADDS ANOTHER\r\n    // USERS RECIPE OR BASIALLY IT WONT DELETE THE ORIGINAL POST... I THINK\r\n    const [ removeRecipe, { error, removedRecipe }] = useMutation(REMOVE_RECIPE);\r\n    const [ recipeId, setRecipeID ] = useState('');\r\n\r\n    const handleDelete = async (event) => {\r\n        event.preventDefault();\r\n        let recipeID = event.target.id;\r\n        setRecipeID(recipeID)\r\n\r\n        console.log(\"recipeID\");\r\n        console.log(recipeId);\r\n\r\n        try {\r\n            // const { removedRecipe } = await removeRecipe({\r\n            //     variables: { recipeId },\r\n            // });\r\n\r\n            console.log(\"success recipe removed\");\r\n            console.log()\r\n        } catch (e) {\r\n            console.error(e);\r\n            console.log(\"it didnt work\");\r\n        }\r\n    }\r\n\r\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\r\n        return <Redirect to=\"/myprofile\" />;\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (!user?.username) {\r\n        return (\r\n          <h4>\r\n            You need to be logged in to see your profile page. Use the navigation\r\n            links above to sign up or log in!\r\n          </h4>\r\n        );\r\n    }\r\n\r\n//     let testsample =    `An ambulance takes Perry away, and the police demand Lori's help to catch Max\r\n// Later that night, Max returns and kills the officers watching the house\r\n// In an attempt to get him back, Jarret kidnaps Lori and Spike in hopes that Max will follow them to the EMAX building which he does\r\n// She first discovers him in the laboratory. Max relinquishes his aggressive, homicidal nature and begins to kiss Lori's hand\r\n// Jarret shoots Max with a shotgun before being knocked onto a large electrical cage, which kills him\r\n// Lori pets Max's head as he dies`\r\n\r\n//     let result = testsample.split(\"\\n\");\r\n\r\n//     const sentencearray = [];\r\n\r\n//     for (let a = 0; a < result.length; a++) {\r\n//         sentencearray.push(result[a]);\r\n//     };\r\n\r\n//     console.log(\"hi\");\r\n//     console.log(sentencearray);\r\n\r\n\r\n    return (\r\n            <div className=\"userprofile\">\r\n                <div className=\"usersrecipes\">\r\n                    {recipes.map((recipe) => (\r\n                        <div key={recipe._id} className=\"recipes\">\r\n                            <Link to={`/recipes/${recipe._id}`}>\r\n                                <div className=\"recipeinfo\">\r\n                                    <h3>{ recipe.title }</h3>\r\n                                    <p>Servings: { recipe.servings }</p>\r\n                                    <p>Total Time: { recipe.totalTime }</p>\r\n                                    <br />\r\n                                </div>\r\n                                <div className=\"ingredientslist\">\r\n                                    {recipe.ingredients.map((ingredient) => (\r\n                                        <p>{ ingredient }</p>\r\n                                    ))}    \r\n                                </div>\r\n                                <div>\r\n                                    \r\n                                </div>\r\n                                {/* <div className=\"directionlist\">\r\n                                    {recipe.directions.map((direction) => (\r\n                                        <p>{ direction }</p>\r\n                                    ))}\r\n                                </div> */}\r\n                            </Link>\r\n                            <div>\r\n                                <button id={recipe._id} onClick={handleDelete}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>         \r\n    );\r\n    \r\n\r\n};\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}