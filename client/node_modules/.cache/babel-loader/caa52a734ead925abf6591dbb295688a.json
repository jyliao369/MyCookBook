{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Desktop\\\\Coding\\\\mycookbook prototype\\\\mycookbookver1\\\\client\\\\src\\\\pages\\\\Recipespage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_RECIPES } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipespage = () => {\n  _s();\n\n  // // THESE LINE OF CODES SHOULD BE ABLE TO GRAB ALL OF THE RECIPES IN THE API\n  // // IMPORTANT INFO, WILL HAVE TO MOVE IT TO SOMEWHERE ELSE\n  // const APP_ID = \"b2a265ec\";\n  // const APP_KEY = \"a8ce17e2a55b2d4b2d802b1792fb480d\";\n  // const [recipes, setRecipes]  = useState([]);\n  // const [search, setSearch] = useState(\"\");\n  // const [query, setQuery] = useState(\"random\")\n  // useEffect(() => {\n  //     getRecipes();\n  // }, [query]);\n  // // THIS FUNCTION SHOULD GRAB ALL OF THE RECIPES WITHIN THE API DATABASE\n  // const getRecipes = async () => {\n  //     const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`);\n  //     const data = await response.json();\n  //     setRecipes(data.hits);\n  // };\n  // const updateSearch = (e) => {\n  //     setSearch(e.target.value);\n  // };\n  // const getSearch = (e) => {\n  //     e.preventDefault();\n  //     setQuery(search);\n  // };\n  // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\n  // BY THE USER\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_RECIPES);\n  const recipe = (data === null || data === void 0 ? void 0 : data.recipe) || [];\n  console.log(\"hello \" + recipe);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipespage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getSearch,\n        className: \"searchform\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchbar\",\n          type: \"text\",\n          onChange: updateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipeslist\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipecard\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.recipe.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.recipe.calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.recipe.totalTime, \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), recipe.recipe.ingredientLines.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: ingredient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))]\n      }, recipe.recipe.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recipespage, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Recipespage;\nexport default Recipespage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipespage\");","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/mycookbook prototype/mycookbookver1/client/src/pages/Recipespage.js"],"names":["React","useEffect","useState","useQuery","QUERY_RECIPES","Recipespage","loading","data","recipe","console","log","getSearch","updateSearch","recipes","map","label","calories","totalTime","ingredientLines","ingredient"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBJ,QAAQ,CAACC,aAAD,CAAlC;AACA,QAAMI,MAAM,GAAG,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,MAAN,KAAgB,EAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,MAAvB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEG,SAAhB;AAA2B,QAAA,SAAS,EAAC,YAArC;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,WAAjB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,QAAQ,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKC,OAAO,CAACC,GAAR,CAAaN,MAAD,iBACT;AAA+B,QAAA,SAAS,EAAC,YAAzC;AAAA,gCACI;AAAA,oBAAIA,MAAM,CAACA,MAAP,CAAcO;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIP,MAAM,CAACA,MAAP,CAAcQ;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,qBAAIR,MAAM,CAACA,MAAP,CAAcS,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAIKT,MAAM,CAACA,MAAP,CAAcU,eAAd,CAA8BJ,GAA9B,CAAmCK,UAAD,iBAC/B;AAAA,oBACKA;AADL;AAAA;AAAA;AAAA;AAAA,gBADH,CAJL;AAAA,SAAUX,MAAM,CAACA,MAAP,CAAcO,KAAxB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA5DD;;GAAMV,W;UA8BwBF,Q;;;KA9BxBE,W;AA8DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_RECIPES } from '../utils/queries';\r\n\r\nconst Recipespage = () => {\r\n\r\n    // // THESE LINE OF CODES SHOULD BE ABLE TO GRAB ALL OF THE RECIPES IN THE API\r\n    // // IMPORTANT INFO, WILL HAVE TO MOVE IT TO SOMEWHERE ELSE\r\n    // const APP_ID = \"b2a265ec\";\r\n    // const APP_KEY = \"a8ce17e2a55b2d4b2d802b1792fb480d\";\r\n\r\n    // const [recipes, setRecipes]  = useState([]);\r\n    // const [search, setSearch] = useState(\"\");\r\n    // const [query, setQuery] = useState(\"random\")\r\n\r\n    // useEffect(() => {\r\n    //     getRecipes();\r\n    // }, [query]);\r\n    // // THIS FUNCTION SHOULD GRAB ALL OF THE RECIPES WITHIN THE API DATABASE\r\n    // const getRecipes = async () => {\r\n    //     const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`);\r\n    //     const data = await response.json();\r\n    //     setRecipes(data.hits);\r\n    // };\r\n    // const updateSearch = (e) => {\r\n    //     setSearch(e.target.value);\r\n    // };\r\n    // const getSearch = (e) => {\r\n    //     e.preventDefault();\r\n    //     setQuery(search);\r\n    // };\r\n\r\n    // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\r\n    // BY THE USER\r\n    const { loading, data } = useQuery(QUERY_RECIPES);\r\n    const recipe = data?.recipe || [];\r\n\r\n    console.log(\"hello \" + recipe);\r\n\r\n    return (\r\n        <div className=\"recipespage\">\r\n            <div className=\"search\"> \r\n                <form onSubmit={getSearch} className=\"searchform\">\r\n                    <input className=\"searchbar\" type=\"text\" onChange={updateSearch}></input>\r\n                    <button className=\"search-button\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"recipeslist\">\r\n                {recipes.map((recipe) => (\r\n                    <div key={recipe.recipe.label} className=\"recipecard\">\r\n                        <p>{recipe.recipe.label}</p>\r\n                        <p>{recipe.recipe.calories}</p>\r\n                        <p>{recipe.recipe.totalTime} mins</p>\r\n                        {recipe.recipe.ingredientLines.map((ingredient) => (\r\n                            <div>\r\n                                {ingredient}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default Recipespage;"]},"metadata":{},"sourceType":"module"}