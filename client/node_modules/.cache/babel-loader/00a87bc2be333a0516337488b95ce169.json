{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Desktop\\\\Coding\\\\mycookbook prototype\\\\mycookbookver4\\\\client\\\\src\\\\pages\\\\Recipespage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_RECIPES } from '../utils/queries'; // IMPORTANT FOR CLOUDINARY\n// import Axios from 'axios';\n\nimport { Image } from 'cloudinary-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipespage = () => {\n  _s();\n\n  // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\n  // BY THE USER\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_RECIPES);\n  const recipes = (data === null || data === void 0 ? void 0 : data.recipes) || []; // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\n  // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\n  // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\n\n  const uniqueRecipes = [];\n\n  for (let a = 0; a < recipes.length; a++) {\n    let exists = false;\n\n    for (let b = 0; b < uniqueRecipes.length; b++) {\n      if (recipes[a].title === uniqueRecipes[b].title) {\n        exists = true;\n        break;\n      }\n    }\n\n    if (!exists) {\n      uniqueRecipes.push(recipes[a]);\n    }\n  } // console.log(uniqueRecipes);\n  // THIS SHOULD HELP PRINT ONLY A FEW AT A TIME\n\n\n  let test = [];\n  let d = 0;\n\n  const handleNext = () => {\n    test = [];\n    console.log(\"hi\");\n\n    for (let c = 0 + d; c <= 4 + d; c++) {\n      test.push(uniqueRecipes[c]);\n      console.log(\"hi\");\n    }\n\n    d += 5;\n  };\n\n  handleNext();\n  console.log(\"test\");\n  console.log(test);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipespage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searcharea\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"searchform\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchbar\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipeslist\",\n      children: uniqueRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipecard\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe._id}`,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            cloudName: \"du119g90a\",\n            public_id: recipe.imageid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generalinfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Servings: \", recipe.servings]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"totalTime: \", recipe.totalTime, \" mins\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recipespage, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Recipespage;\nexport default Recipespage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipespage\");","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/mycookbook prototype/mycookbookver4/client/src/pages/Recipespage.js"],"names":["React","useEffect","useState","Link","useQuery","QUERY_RECIPES","Image","Recipespage","loading","data","recipes","uniqueRecipes","a","length","exists","b","title","push","test","d","handleNext","console","log","c","map","recipe","_id","imageid","servings","totalTime"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_RECIPES } from '../utils/queries';\r\n\r\n// IMPORTANT FOR CLOUDINARY\r\n// import Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nconst Recipespage = () => {\r\n    // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\r\n    // BY THE USER\r\n    const { loading, data } = useQuery(QUERY_RECIPES);\r\n    const recipes = data?.recipes || [];\r\n\r\n    // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\r\n    // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\r\n    // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\r\n    const uniqueRecipes = [];\r\n    for (let a = 0; a < recipes.length; a++) {\r\n        let exists = false;\r\n        for (let b = 0; b < uniqueRecipes.length; b++) {\r\n            if (recipes[a].title === uniqueRecipes[b].title) {\r\n                exists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!exists) {\r\n            uniqueRecipes.push(recipes[a]);\r\n        }\r\n    }\r\n    // console.log(uniqueRecipes);\r\n\r\n    // THIS SHOULD HELP PRINT ONLY A FEW AT A TIME\r\n    let test = [];\r\n    let d = 0;\r\n    const handleNext = () => {\r\n        test = [];\r\n        console.log(\"hi\");\r\n        for (let c = 0 + d; c <=4 + d ; c++) {\r\n            test.push(uniqueRecipes[c]);\r\n            console.log(\"hi\");\r\n        }\r\n        d += 5;\r\n    }\r\n    handleNext();\r\n    console.log(\"test\");\r\n    console.log(test);\r\n\r\n    return (\r\n        <div className=\"recipespage\">\r\n            <div className=\"searcharea\"> \r\n                <form className=\"searchform\">\r\n                    <input className=\"searchbar\" type=\"text\"></input>\r\n                    <button className=\"search-button\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"recipeslist\">\r\n                {uniqueRecipes.map((recipe) => (\r\n                    <div key={recipe._id} className=\"recipecard\">\r\n                        <Link to={`/recipes/${ recipe._id }`}>\r\n                            <Image cloudName=\"du119g90a\" public_id={ recipe.imageid } />\r\n                            <div className=\"generalinfo\">\r\n                                <h3>{recipe.title}</h3>\r\n                                <p>Total Servings: {recipe.servings}</p>\r\n                                <p>totalTime: {recipe.totalTime} mins</p>\r\n                            </div>\r\n                            \r\n                            {/* {recipe.recipe.ingredientLines.map((ingredient) => (\r\n                                <div>\r\n                                    {ingredient}\r\n                                </div>\r\n                            ))} */}\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <button onClick={handleNext}>hi</button>\r\n            </div>\r\n        </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default Recipespage;"]},"metadata":{},"sourceType":"module"}