{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Desktop\\\\Coding\\\\mycookbook prototype\\\\mycookbookver1\\\\client\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport React, { useEffect, useState } from 'react'; // import { useQuery } from '@apollo/client';\n// import ProfileList from '../components/ProfileList';\n\nimport { QUERY_RECIPES } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // THESE NEXT CODES OF LINE SHOULD BE ABLE TO GET ABOUT 10 RANDOMLY\n  // SELECTED RECIPES FROM AN API AND PRESENTED\n  const APP_ID = \"b2a265ec\";\n  const APP_KEY = \"a8ce17e2a55b2d4b2d802b1792fb480d\";\n  const [APIrecipes, setRecipes] = useState([]);\n  const [randrecipe, setRandom] = useState([]);\n  useEffect(() => {\n    getRecipes();\n    getRandRecipes();\n  }, []);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=random&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const getRandRecipes = async () => {\n    let list = [];\n\n    for (let a = 0; a < 10; a++) {\n      list.push(APIrecipes[Math.floor(Math.random() * 100)]);\n    }\n\n    setRandom(list);\n  }; // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n\n\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_RECIPES);\n  const recipes = (data === null || data === void 0 ? void 0 : data.recipes) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onlinerecipes\",\n      children: randrecipe.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipepost\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Servings: \", recipe.servings, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Cook Time: \", recipe.totalTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Chef: \", recipe.postAuthor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userrecipes\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipepost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) // <main>\n  //   <div className=\"flex-row justify-center\">\n  //     <div className=\"col-12 col-md-10 my-3\">\n  //       {loading ? (\n  //         <div>Loading...</div>\n  //       ) : (\n  //         <ProfileList\n  //           users={users}\n  //           title=\"Placeholder Title\"\n  //         />\n  //       )}\n  //     </div>\n  //   </div>\n  // </main>\n  ;\n};\n\n_s(Home, \"7akcs30+bPZ3lihKTy8K9k0X7ys=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/mycookbook prototype/mycookbookver1/client/src/pages/Home.js"],"names":["useQuery","React","useEffect","useState","QUERY_RECIPES","Home","APP_ID","APP_KEY","APIrecipes","setRecipes","randrecipe","setRandom","getRecipes","getRandRecipes","response","fetch","data","json","hits","list","a","push","Math","floor","random","loading","recipes","map","recipe","title","servings","totalTime","postAuthor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;AAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB;AACA;AACA,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,SAAb,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACVC,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,UAAU,GAAG,YAAY;AAC7B,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAgDT,MAAO,YAAWC,OAAQ,gBAA5E,CAA5B;AACA,UAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAR,IAAAA,UAAU,CAACO,IAAI,CAACE,IAAN,CAAV;AACD,GAJD;;AAMA,QAAML,cAAc,GAAG,YAAY;AACjC,QAAIM,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAUb,UAAU,CAACc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAD,CAApB;AACD;;AACDb,IAAAA,SAAS,CAACQ,IAAD,CAAT;AACD,GAND,CArBiB,CA6BjB;AACA;;;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWT,IAAAA;AAAX,MAAoBhB,QAAQ,CAACI,aAAD,CAAlC;AACA,QAAMsB,OAAO,GAAG,CAAAV,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEU,OAAN,KAAiB,EAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGhB,UAAU,CAACiB,GAAX,CAAgBC,MAAD,iBACd;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,oBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,mCAAeD,MAAM,CAACE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,0CAAsBF,MAAM,CAACG,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,+BAAWH,MAAM,CAACI,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGN,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAqBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCF;AAoCD,CAtED;;GAAMvB,I;UA+BsBL,Q;;;KA/BtBK,I;AAwEN,eAAeA,IAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport React, {useEffect, useState } from 'react';\n// import { useQuery } from '@apollo/client';\n\n// import ProfileList from '../components/ProfileList';\nimport { QUERY_RECIPES } from '../utils/queries';\n\nconst Home = () => {\n\n  // THESE NEXT CODES OF LINE SHOULD BE ABLE TO GET ABOUT 10 RANDOMLY\n  // SELECTED RECIPES FROM AN API AND PRESENTED\n  const APP_ID = \"b2a265ec\";\n  const APP_KEY = \"a8ce17e2a55b2d4b2d802b1792fb480d\";\n\n  const [APIrecipes, setRecipes]  = useState([]);\n  const [randrecipe, setRandom] = useState([]);\n\n  useEffect(() => {\n    getRecipes();\n    getRandRecipes();\n  }, []);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=random&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const getRandRecipes = async () => {\n    let list = [];\n    for (let a = 0; a < 10; a++) {\n      list.push(APIrecipes[Math.floor(Math.random()*100)]);\n    }\n    setRandom(list);\n  };\n\n  // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n  const { loading, data } = useQuery(QUERY_RECIPES);\n  const recipes = data?.recipes || [];\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"onlinerecipes\">\n        {randrecipe.map((recipe) => (\n          <div className=\"recipepost\">\n            <p>{ recipe.title }</p>\n            <p>Servings: { recipe.servings } </p>\n            <p>Total Cook Time: { recipe.totalTime }</p>\n            <p>Chef: { recipe.postAuthor }</p>\n          </div>\n        ))} \n      </div>\n      <div className=\"userrecipes\">\n        {recipes.map((recipe) => (\n          <div className=\"recipepost\">\n\n          </div>\n        ))}\n      </div>\n    </div>\n\n    // <main>\n    //   <div className=\"flex-row justify-center\">\n    //     <div className=\"col-12 col-md-10 my-3\">\n    //       {loading ? (\n    //         <div>Loading...</div>\n    //       ) : (\n    //         <ProfileList\n    //           users={users}\n    //           title=\"Placeholder Title\"\n    //         />\n    //       )}\n    //     </div>\n    //   </div>\n    // </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}