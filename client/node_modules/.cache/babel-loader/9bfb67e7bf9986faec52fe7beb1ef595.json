{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Desktop\\\\Coding\\\\mycookbook prototype\\\\mycookbookver2\\\\client\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // import { useQuery } from '@apollo/client';\n// import ProfileList from '../components/ProfileList';\n\nimport { QUERY_RECIPES } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // THESE NEXT CODES OF LINE SHOULD BE ABLE TO GET ABOUT 10 RANDOMLY\n  // SELECTED RECIPES FROM AN API AND PRESENTED\n  // const APP_ID = \"b2a265ec\";\n  // const APP_KEY = \"a8ce17e2a55b2d4b2d802b1792fb480d\";\n  // const [APIrecipes, setRecipes]  = useState([]);\n  // const [randrecipe, setRandom] = useState([]);\n  // useEffect(() => {\n  //   getRecipes();\n  //   getRandRecipes();\n  // },);\n  // const getRecipes = async () => {\n  //   const response = await fetch(`https://api.edamam.com/search?q=random&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`);\n  //   const data = await response.json();\n  //   setRecipes(data.hits);\n  // };\n  // const getRandRecipes = async () => {\n  //   let list = [];\n  //   for (let a = 0; a < 10; a++) {\n  //     list.push(APIrecipes[Math.floor(Math.random()*100)]);\n  //   }\n  //   setRandom(list);\n  // };\n  // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n  // THIS WILL RANDOMLY PICK 10 RANDOM RECIPES MADE BY USERS TO SHOW ON THE HOMEPAGE\n  // THIS ACTS AS A TEASER OR A SAMPLE\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_RECIPES);\n  const recipes = (data === null || data === void 0 ? void 0 : data.recipes) || []; // THIS CODES SHOULD REMOVE DUPLICATES\n\n  const uniqueRec = [];\n\n  for (let b = 0; b < recipes.length; b++) {\n    let aRecipe = recipes[b];\n    console.log(\"title\");\n    console.log(aRecipe.title);\n\n    for (let c = 0; c < recipes.length; c++) {\n      let bRecipe = recipes[c + 1];\n\n      if (aRecipe.title === bRecipe.title) {\n        uniqueRec.push(aRecipe);\n      }\n    }\n\n    ;\n  }\n\n  ;\n  console.log('test');\n  console.log(uniqueRec);\n  const randRecipe = [];\n\n  for (let a = 0; a < 5; a++) {\n    randRecipe.push(recipes[Math.floor(Math.random() * recipes.length)]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userrecipes\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipepost\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe._id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Servings: \", recipe.servings]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Cook Time: \", recipe.totalTime, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chef: \", recipe.postAuthor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/mycookbook prototype/mycookbookver2/client/src/pages/Home.js"],"names":["useQuery","React","useEffect","useState","Link","QUERY_RECIPES","Home","loading","data","recipes","uniqueRec","b","length","aRecipe","console","log","title","c","bRecipe","push","randRecipe","a","Math","floor","random","map","recipe","_id","servings","totalTime","postAuthor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;AAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBR,QAAQ,CAACK,aAAD,CAAlC;AACA,QAAMI,OAAO,GAAG,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,OAAN,KAAiB,EAAjC,CAlCiB,CAoCjB;;AACA,QAAMC,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,OAAO,GAAGJ,OAAO,CAACE,CAAD,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAAO,CAACG,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACvC,UAAIC,OAAO,GAAGT,OAAO,CAACQ,CAAC,GAAC,CAAH,CAArB;;AACA,UAAIJ,OAAO,CAACG,KAAR,KAAkBE,OAAO,CAACF,KAA9B,EAAqC;AACnCN,QAAAA,SAAS,CAACS,IAAV,CAAeN,OAAf;AACD;AACF;;AAAA;AACF;;AAAA;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAIA,QAAMU,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,UAAU,CAACD,IAAX,CAAgBV,OAAO,CAACa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,OAAO,CAACG,MAAnC,CAAD,CAAvB;AACD;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BAYE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGH,OAAO,CAACgB,GAAR,CAAaC,MAAD,iBACX;AAAwB,QAAA,SAAS,EAAC,YAAlC;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAYA,MAAM,CAACC,GAAK,EAAnC;AAAA,kCACE;AAAA,sBAAMD,MAAM,CAACV;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,qCAAeU,MAAM,CAACE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,4CAAsBF,MAAM,CAACG,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,iCAAWH,MAAM,CAACI,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAWJ,MAAM,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxFD;;GAAMrB,I;UAiCsBN,Q;;;KAjCtBM,I;AA0FN,eAAeA,IAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport React, {useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n\n// import ProfileList from '../components/ProfileList';\nimport { QUERY_RECIPES } from '../utils/queries';\n\nconst Home = () => {\n\n  // THESE NEXT CODES OF LINE SHOULD BE ABLE TO GET ABOUT 10 RANDOMLY\n  // SELECTED RECIPES FROM AN API AND PRESENTED\n  // const APP_ID = \"b2a265ec\";\n  // const APP_KEY = \"a8ce17e2a55b2d4b2d802b1792fb480d\";\n\n  // const [APIrecipes, setRecipes]  = useState([]);\n  // const [randrecipe, setRandom] = useState([]);\n\n  // useEffect(() => {\n  //   getRecipes();\n  //   getRandRecipes();\n  // },);\n\n  // const getRecipes = async () => {\n  //   const response = await fetch(`https://api.edamam.com/search?q=random&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=100`);\n  //   const data = await response.json();\n  //   setRecipes(data.hits);\n  // };\n\n  // const getRandRecipes = async () => {\n  //   let list = [];\n  //   for (let a = 0; a < 10; a++) {\n  //     list.push(APIrecipes[Math.floor(Math.random()*100)]);\n  //   }\n  //   setRandom(list);\n  // };\n\n  // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n  // THIS WILL RANDOMLY PICK 10 RANDOM RECIPES MADE BY USERS TO SHOW ON THE HOMEPAGE\n  // THIS ACTS AS A TEASER OR A SAMPLE\n  const { loading, data } = useQuery(QUERY_RECIPES);\n  const recipes = data?.recipes || [];\n  \n  // THIS CODES SHOULD REMOVE DUPLICATES\n  const uniqueRec = [];\n  for (let b = 0; b < recipes.length; b++) {\n    let aRecipe = recipes[b];\n    console.log(\"title\");\n    console.log(aRecipe.title);\n    for (let c = 0; c < recipes.length; c++) {\n      let bRecipe = recipes[c+1];\n      if (aRecipe.title === bRecipe.title) {\n        uniqueRec.push(aRecipe);\n      }\n    };\n  };\n\n  console.log('test');\n  console.log(uniqueRec);\n\n\n  \n  const randRecipe = [];\n  for (let a = 0; a < 5; a++) {\n    randRecipe.push(recipes[Math.floor(Math.random() * recipes.length)]);\n  }\n  \n\n  return (\n    <div className=\"homepage\">\n      {/* <div className=\"onlinerecipes\">\n        {randRecipe.map((recipe) => (\n          <div key={recipe._id} className=\"recipepost\">\n            <Link to={`/recipes/${recipe._id}`}>\n              <p>{ recipe.title }</p>\n              <p>Servings: { recipe.servings } </p>\n              <p>Total Cook Time: { recipe.totalTime }</p>\n            </Link>\n          </div>\n        ))} \n      </div> */}\n      <div className=\"userrecipes\">\n        {recipes.map((recipe) => (\n          <div key={ recipe._id } className=\"recipepost\">\n            <Link to={`/recipes/${ recipe._id }`}>\n              <h3>{ recipe.title }</h3>\n              <p>Servings: { recipe.servings }</p>\n              <p>Total Cook Time: { recipe.totalTime } mins</p>\n              <p>Chef: { recipe.postAuthor }</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}