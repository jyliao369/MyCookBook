{"ast":null,"code":"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    try {\n      const auth = decode(this.getToken());\n      return auth;\n    } catch (e) {\n      console.error(e);\n    }\n\n    return {};\n  }\n\n  loggedIn() {\n    try {\n      const token = this.getToken();\n      return token && !this.isTokenExpired(token) ? true : false;\n    } catch (e) {\n      console.error(e);\n    }\n\n    return false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/Justin/Desktop/Coding/mycookbook prototype/mycookbookver3/client/src/utils/auth.js"],"names":["decode","AuthService","getProfile","auth","getToken","e","console","error","loggedIn","token","isTokenExpired","decoded","exp","Date","now","localStorage","removeItem","getItem","login","idToken","setItem","window","location","assign","logout","reload"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,YAAnB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,UAAU,GAAG;AACX,QAAI;AACF,YAAMC,IAAI,GAAGH,MAAM,CAAC,KAAKI,QAAL,EAAD,CAAnB;AACA,aAAOD,IAAP;AACD,KAHD,CAGE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AAAC,WAAO,EAAP;AACH;;AAEDG,EAAAA,QAAQ,GAAG;AACT,QAAI;AACF,YAAMC,KAAK,GAAG,KAAKL,QAAL,EAAd;AACA,aAAOK,KAAK,IAAI,CAAC,KAAKC,cAAL,CAAoBD,KAApB,CAAV,GAAuC,IAAvC,GAA8C,KAArD;AACD,KAHD,CAGE,OAAOJ,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AAAC,WAAO,KAAP;AACH;;AAEDK,EAAAA,cAAc,CAACD,KAAD,EAAQ;AACpB,UAAME,OAAO,GAAGX,MAAM,CAACS,KAAD,CAAtB;;AACA,QAAIE,OAAO,CAACC,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAa,IAA/B,EAAqC;AACnCC,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDZ,EAAAA,QAAQ,GAAG;AACT,WAAOW,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAP;AACD;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACbJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCD,OAAjC;AACAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPT,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgBG,MAAhB;AACD;;AAxCe;;AA2ClB,eAAe,IAAIxB,WAAJ,EAAf","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    try {\n      const auth = decode(this.getToken())\n      return auth;\n    } catch (e) {\n      console.error(e);\n    } return {};\n  }\n\n  loggedIn() {\n    try {\n      const token = this.getToken();\n      return token && !this.isTokenExpired(token) ? true : false;\n    } catch (e) {\n      console.error(e);\n    } return false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}