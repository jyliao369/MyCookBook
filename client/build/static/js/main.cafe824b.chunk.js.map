{"version":3,"sources":["utils/queries.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","pages/Profile.js","pages/Recipespage.js","components/RecipeForm/index.js","pages/CreateRecipe.js","pages/SingleRecipe.js","pages/TestPicupload.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_SINGLE_USER","gql","QUERY_MYPROFILE","QUERY_RECIPES","QUERY_SINGLE_RECIPE","Home","useQuery","data","loading","recipes","uniqueRecipes","a","length","exists","b","title","push","console","log","drinks","appetizers","entres","desserts","category","teaserdrinks","teaserentres","teaseappetizers","teaserdesserts","className","map","recipe","imageid","cloudName","public_id","to","_id","servings","totalTime","postAuthor","LOGIN_USER","ADD_USER","ADD_RECIPE","REMOVE_RECIPE","decode","this","getToken","e","error","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Login","props","useState","email","password","formState","setFormState","useMutation","login","handleChange","event","target","name","value","handleSubmit","preventDefault","variables","Auth","onSubmit","placeholder","type","onChange","message","Signup","username","addUser","Profile","useEffect","userId","useParams","user","myprofile","removeRecipe","handleDelete","recipeId","id","loggedIn","getProfile","onClick","Recipespage","test","d","handleNext","c","RecipeForm","ingredients","directions","newRecipe","setNewRecipe","imageSelected","setImageSelected","prevState","ingredientsarray","testingredientsarray","split","directionssarray","testdirectionsarray","update","cache","addRecipe","readQuery","query","writeQuery","src","URL","createObjectURL","alt","file","formData","FormData","append","Axios","post","then","response","uploadImage","files","CreateRecipe","SingleRecipe","handleAddto","enabled","disabled","ingredient","direction","TestPicUpload","Header","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cafe824b.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_USER = gql`\r\n    query allUsers {\r\n        users {\r\n            _id\r\n            username\r\n            email\r\n        }\r\n    }\r\n`;\r\n\r\nexport const QUERY_SINGLE_USER = gql`\r\n    query singleUser($userId: ID!) {\r\n        user(userId: $userId) {\r\n            _id\r\n            username\r\n            email\r\n            recipes {\r\n                _id\r\n                title\r\n                category\r\n                servings\r\n                totalTime\r\n                ingredients\r\n                directions\r\n                imageid\r\n                createdAt\r\n                postAuthor\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const QUERY_MYPROFILE = gql`\r\n    query myprofile {\r\n        myprofile{\r\n            _id\r\n            username\r\n            email\r\n            recipes {\r\n                _id\r\n                title\r\n                category\r\n                servings\r\n                totalTime\r\n                ingredients\r\n                directions\r\n                imageid\r\n                createdAt\r\n                postAuthor\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const QUERY_RECIPES = gql`\r\n    query getRecipes {\r\n        recipes {\r\n            _id\r\n            title\r\n            category\r\n            servings\r\n            totalTime\r\n            ingredients\r\n            directions\r\n            imageid\r\n            createdAt\r\n            postAuthor\r\n        }\r\n    }\r\n`;\r\n\r\nexport const QUERY_SINGLE_RECIPE = gql`\r\n    query getSingleRecipe($recipeId: ID!) {\r\n        recipe(recipeId: $recipeId) {\r\n            _id\r\n            title\r\n            category\r\n            servings\r\n            totalTime\r\n            ingredients\r\n            directions\r\n            imageid\r\n            createdAt\r\n            postAuthor\r\n        }\r\n    }\r\n`;\r\n","import { useQuery } from '@apollo/client';\nimport React, {useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { Image } from 'cloudinary-react';\n// import { useQuery } from '@apollo/client';\n\nimport { QUERY_RECIPES } from '../utils/queries';\n\nconst Home = () => {\n\n  // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n  // THIS WILL RANDOMLY PICK 10 RANDOM RECIPES MADE BY USERS TO SHOW ON THE HOMEPAGE\n  // THIS ACTS AS A TEASER OR A SAMPLE\n  const { loading, data } = useQuery(QUERY_RECIPES);\n  const recipes = data?.recipes || [];\n\n  // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\n  // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\n  // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\n  const uniqueRecipes = [];\n  for (let a = 0; a < recipes.length; a++) {\n    let exists = false;\n    for (let b = 0; b < uniqueRecipes.length; b++) {\n      if (recipes[a].title === uniqueRecipes[b].title) {\n        exists = true;\n        break;\n      }\n    }\n    if (!exists) {\n      uniqueRecipes.push(recipes[a]);\n    }\n  };\n  // console.log(\"new\");\n  console.log(uniqueRecipes);\n\n  // THESE ARRAYS SHOULD HOLD RECIPES BASED ON THE CATEGORY\n  // THINK OF IT LIKE AN FILTERING\n  const drinks = [];\n  const appetizers =[];\n  const entres = [];\n  const desserts = [];\n  for (let a = 0; a < uniqueRecipes.length; a++) {\n    if (uniqueRecipes[a].category === \"Drinks\") {\n      drinks.push(uniqueRecipes[a])\n    }\n    if (uniqueRecipes[a].category === \"Appetizer\") {\n      appetizers.push(uniqueRecipes[a])\n    }\n    if (uniqueRecipes[a].category === \"Entres\") {\n      entres.push(uniqueRecipes[a])\n    }if (uniqueRecipes[a].category === \"Dessert\") {\n      desserts.push(uniqueRecipes[a])\n    }\n  }\n\n  const teaserdrinks = [];\n  const teaserentres = [];\n  const teaseappetizers = [];\n  const teaserdesserts = [];\n  for (let b = 0; b < 3; b++) {\n    teaserdrinks.push(drinks[b])\n  }\n  for (let b = 0; b < 2; b++) {\n    teaserentres.push(entres[b])\n  }\n  for (let b = 0; b < 2; b++) {\n    teaseappetizers.push(appetizers[b])\n  }\n  for (let b = 0; b < 3; b++) {\n    teaserdesserts.push(desserts[b])\n  }\n  console.log(\"a\");\n  console.log(teaserdrinks);\n  console.log(\"b\");\n  console.log(teaserentres);\n  console.log(\"c\");\n  console.log(teaseappetizers);\n  console.log(\"d\");\n  console.log(teaserdesserts);\n\n\n  \n  return (\n    <div className=\"homepage\">\n      <div className=\"userrecipes\">\n        {uniqueRecipes.map((recipe) => (\n          <div key={ recipe._id } className=\"recipepost\">\n            { recipe.imageid ? (\n              <Image cloudName=\"du119g90a\" public_id={ recipe.imageid } />\n            ) : (\n              <Image cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\" />\n            )}\n            <Link to={`/recipes/${ recipe._id }`}>\n              <h3>{ recipe.title }</h3>\n              <p>Servings: { recipe.servings }</p>\n              <p>Total Cook Time: { recipe.totalTime } mins</p>\n              <p>Chef: { recipe.postAuthor }</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($username: String!, $email: String!, $password: String!) {\r\n        addUser(username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_RECIPE = gql`\r\n    mutation addRecipe($title:String!, $category:String!, $servings:String!, $totalTime:String!, $ingredients:[String]!, $directions:[String]!, $imageid:String ) {\r\n        addRecipe(title:$title, category:$category, servings:$servings, totalTime:$totalTime, ingredients:$ingredients, directions:$directions, imageid:$imageid) {\r\n            title\r\n            category\r\n            servings\r\n            totalTime\r\n            ingredients\r\n            directions\r\n            imageid\r\n            createdAt\r\n            postAuthor\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_RECIPE = gql`\r\n    mutation removeRecipe($recipeId: String!) {\r\n        removeRecipe(recipeId: $recipeId) {\r\n            _id\r\n            title\r\n            category\r\n            servings\r\n            totalTime\r\n            ingredients\r\n            directions\r\n            imageid\r\n            createdAt\r\n            postAuthor\r\n        }\r\n    }\r\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    try {\n      const auth = decode(this.getToken())\n      return auth;\n    } catch (e) {\n      console.error(e);\n    } return {};\n  }\n\n  loggedIn() {\n    try {\n      const token = this.getToken();\n      return token && !this.isTokenExpired(token) ? true : false;\n    } catch (e) {\n      console.error(e);\n    } return false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.login.token);\r\n        }   catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setFormState({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n      <div className=\"loginpage\">\r\n        <div className=\"logincard\">\r\n          <h4 className=\"card-header\">Login</h4>\r\n          \r\n          <div className=\"loginbody\">\r\n            { data ? (\r\n              <p>Success! You may now head{' '}\r\n              <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form className=\"loginform\" onSubmit={handleSubmit}>\r\n                <input \r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"********\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button className=\"loginbutton\" type=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n            \r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n    const [formState, setFormState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '', \r\n    });\r\n    \r\n    const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n              variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.addUser.token);\r\n        }   catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n      <div className=\"signuppage\">\r\n        <div className=\"signupcard\">\r\n          <h4 className=\"signupheader\">Sign Up</h4>\r\n          <div className=\"signupbody\">\r\n            { data ? (\r\n              <p> Success! Logging in...\r\n                <Link to=\"/\"></Link>\r\n              </p>\r\n            ) : (\r\n              <form className=\"signupform\" onSubmit={handleSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.username}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"********\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button className=\"signipbutton\" type=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useParams, Link } from 'react-router-dom';\r\n\r\n// IMPORTING EVERYTHING FOR QUERIES\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_SINGLE_USER, QUERY_MYPROFILE } from '../utils/queries';\r\n\r\n// IMPORTING EVERYTHING FOR MUTATIONS\r\nimport { useMutation } from '@apollo/client';\r\nimport { REMOVE_RECIPE } from '../utils/mutations';\r\n\r\n// IMPORTANT FOR THE USE OF CLOUDINARY\r\nimport { Image } from 'cloudinary-react';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const { userId } = useParams();\r\n    const { loading, data } = useQuery(\r\n        userId ? QUERY_SINGLE_USER : QUERY_MYPROFILE,\r\n        {\r\n            variables: { userId: userId },\r\n        }\r\n    );\r\n    const user = data?.myprofile || data?.user || {};\r\n    const recipes = user.recipes;\r\n    // console.log(user);\r\n    // console.log(\"hi\");\r\n    // console.log(recipes);\r\n    \r\n    // THESE NEXT LINES OF CODE SHOULD BE ABLE TO DELETE ANY RECIPES WITHIN\r\n    // THE PROFILE PAGE WHICH MEANS ANY RECIPE HELD IN THE USERS RECIPES ARRAY\r\n    // THIS TECHNICALLY SHOULD'T DELETE ANY DUPLICATES OR WHEN A USER ADDS ANOTHER\r\n    // USERS RECIPE OR BASIALLY IT WONT DELETE THE ORIGINAL POST... I THINK\r\n    const [ removeRecipe ] = useMutation(REMOVE_RECIPE);\r\n    // const [ recipeId, setRecipeID ] = useState('');\r\n\r\n    const handleDelete = async (event) => {\r\n        event.preventDefault();\r\n        let recipeId = event.target.id;\r\n        console.log( recipeId );\r\n        console.log( typeof recipeId );\r\n\r\n        try {\r\n            await removeRecipe({\r\n                variables: { recipeId },\r\n            });\r\n\r\n            console.log(\"success recipe removed\");\r\n            console.log()\r\n        } catch (e) {\r\n            console.error(e);\r\n            console.log(\"it didnt work\");\r\n        }\r\n    }\r\n\r\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\r\n        return <Redirect to=\"/myprofile\" />;\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (!user?.username) {\r\n        return (\r\n          <h4 className=\"profileloggedout\">\r\n            You need to be logged in to see your profile page. Use the navigation\r\n            links above to sign up or log in!\r\n          </h4>\r\n        );\r\n    }\r\n\r\n    return (\r\n            <div className=\"userprofilepage\">\r\n                <div className=\"usersrecipes\">\r\n                    {recipes.map((recipe) => (\r\n                        <div key={recipe._id} className=\"recipes\">\r\n\r\n                            <Image cloudName=\"du119g90a\" public_id={ recipe.imageid }/>\r\n                            \r\n                            <Link to={`/recipes/${recipe._id}`}>\r\n                                <h3>{ recipe.title }</h3>\r\n                                <p>Servings: { recipe.servings }</p>\r\n                                <p>Total Time: { recipe.totalTime }</p>\r\n                            </Link>\r\n                        {/* <div className=\"ingredientslist\">\r\n                            {recipe.ingredients.map((ingredient) => (\r\n                                <p>{ ingredient }</p>\r\n                            ))}    \r\n                        </div> */}\r\n                        <div className=\"deletebutton\">\r\n                            <button id={recipe._id} onClick={handleDelete}>Remove</button>                            \r\n                        </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>         \r\n    );\r\n    \r\n\r\n};\r\n\r\nexport default Profile;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_RECIPES } from '../utils/queries';\r\n\r\n// IMPORTANT FOR CLOUDINARY\r\n// import Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nconst Recipespage = () => {\r\n    // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\r\n    // BY THE USER\r\n    const { loading, data } = useQuery(QUERY_RECIPES);\r\n    const recipes = data?.recipes || [];\r\n\r\n    // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\r\n    // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\r\n    // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\r\n    const uniqueRecipes = [];\r\n    for (let a = 0; a < recipes.length; a++) {\r\n        let exists = false;\r\n        for (let b = 0; b < uniqueRecipes.length; b++) {\r\n            if (recipes[a].title === uniqueRecipes[b].title) {\r\n                exists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!exists) {\r\n            uniqueRecipes.push(recipes[a]);\r\n        }\r\n    }\r\n    // console.log(uniqueRecipes);\r\n\r\n    // THIS SHOULD HELP PRINT ONLY A FEW AT A TIME\r\n    let test = [];\r\n    let d = 0;\r\n    const handleNext = () => {\r\n        test = [];\r\n        console.log(\"hi\");\r\n        for (let c = 0 + d; c <=4 + d ; c++) {\r\n            test.push(uniqueRecipes[c]);\r\n            console.log(\"hi\");\r\n            console.log(test);\r\n        }\r\n        d += 5;\r\n        return test;\r\n    }\r\n    handleNext();\r\n\r\n    return (\r\n        <div className=\"recipespage\">\r\n            <div className=\"searcharea\"> \r\n                <form className=\"searchform\">\r\n                    <input className=\"searchbar\" type=\"text\"></input>\r\n                    <button className=\"search-button\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"recipeslist\">\r\n                {uniqueRecipes.map((recipe) => (\r\n                    <div key={recipe._id} className=\"recipecard\">\r\n                        <Link to={`/recipes/${ recipe._id }`}>\r\n                            { recipe.imageid ? (\r\n                                <Image cloudName=\"du119g90a\" public_id={ recipe.imageid } />\r\n                            ) : (\r\n                                <Image cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\" />\r\n                            )}\r\n                            <div className=\"generalinfo\">\r\n                                <h3>{recipe.title}</h3>\r\n                                <p>Total Servings: {recipe.servings}</p>\r\n                                <p>totalTime: {recipe.totalTime} mins</p>\r\n                            </div>\r\n                            \r\n                            {/* {recipe.recipe.ingredientLines.map((ingredient) => (\r\n                                <div>\r\n                                    {ingredient}\r\n                                </div>\r\n                            ))} */}\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <button onClick={handleNext}>hi</button>\r\n            </div>\r\n        </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default Recipespage;","import React from 'react';\r\n// import { useContext } from 'react';\r\nimport { useState } from 'react';\r\n\r\n// import { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_RECIPE } from '../../utils/mutations';\r\nimport { QUERY_RECIPES, QUERY_MYPROFILE } from '../../utils/queries';\r\n\r\nimport Axios from 'axios';\r\n// import { Image } from 'cloudinary-react';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst RecipeForm = () => {\r\n\r\n    const [newRecipe, setNewRecipe] = useState({\r\n        title: '',\r\n        category: '',\r\n        servings: '',\r\n        totalTime: '',\r\n        ingredients: [''],\r\n        directions: [''],\r\n        imageid: '',\r\n    });\r\n\r\n    console.log(\"New Recipe\");\r\n    console.log(newRecipe);\r\n    // console.log(newRecipe.directions);\r\n\r\n    // THIS SHOULD HANDLE THE IMAGES BEING UPLOADED\r\n    // IT SHOULD ALSO GENERATE PUBLIC ID FOR THE IMAGE\r\n    const [imageSelected, setImageSelected] = useState(\"\");\r\n    // const [imageID, setImageID] = useState(\"\");\r\n\r\n    const uploadImage = (file) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"upload_preset\", \"yun8815z\");\r\n\r\n        Axios.post(\r\n            \"https://api.cloudinary.com/v1_1/du119g90a/image/upload\", \r\n            formData\r\n        ).then((response) => {\r\n            console.log(\"response\");\r\n            console.log(response);\r\n            console.log(\"public ID\");\r\n            console.log(response.data.public_id);\r\n            \r\n            setNewRecipe((prevState) => ({\r\n\r\n                ...prevState,\r\n                imageid: response.data.public_id,\r\n            }))\r\n        });\r\n    };\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        if (name === \"title\") {\r\n            setNewRecipe((prevState) => ({\r\n\r\n                ...prevState,\r\n                title: value,\r\n            }))\r\n        }\r\n\r\n        if (name === \"category\") {\r\n            setNewRecipe((prevState) => ({\r\n                \r\n                ...prevState,\r\n                category: value,\r\n            }))\r\n        }\r\n\r\n        if (name === \"servings\") {\r\n            setNewRecipe((prevState) => ({\r\n\r\n                ...prevState,\r\n                servings: value,\r\n            }))\r\n        }\r\n\r\n        if (name === \"totalTime\") {\r\n            setNewRecipe((prevState) => ({\r\n\r\n                ...prevState,\r\n                totalTime: value,\r\n            }))\r\n        }\r\n\r\n        if (name === 'ingredients') {\r\n            let ingredientsarray = [];\r\n            let testingredientsarray = value.split(\"\\n\");\r\n            for (let a = 0; a < testingredientsarray.length; a++) {\r\n                ingredientsarray.push(testingredientsarray[a]);\r\n                setNewRecipe((prevState) => ({\r\n                    ...prevState,\r\n                    ingredients: ingredientsarray\r\n                }))\r\n            };\r\n        }\r\n\r\n        if (name === 'directions') {\r\n            let directionssarray = [];\r\n            let testdirectionsarray = value.split(\"\\n\");\r\n            for (let b = 0; b < testdirectionsarray.length; b++) {\r\n                directionssarray.push(testdirectionsarray[b]);\r\n                setNewRecipe((prevState) => ({\r\n                    ...prevState,\r\n                    directions: directionssarray\r\n                }))\r\n            };\r\n        }\r\n    };\r\n\r\n    const [addRecipe, { error }] = useMutation(ADD_RECIPE, {\r\n        update(cache, { data: { addRecipe } }) {\r\n            try {\r\n                const { recipes } = cache.readQuery({ query: QUERY_RECIPES });\r\n\r\n                cache.writeQuery({\r\n                    query: QUERY_RECIPES,\r\n                    data: { recipes: [addRecipe, ...recipes] },\r\n                });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n\r\n            const { myprofile } = cache.readQuery({ query: QUERY_MYPROFILE });\r\n            cache.writeQuery({\r\n                query: QUERY_MYPROFILE,\r\n                data: { myprofile: { ...myprofile, recipes: [...myprofile.recipes, addRecipe] } },\r\n            });\r\n        },\r\n    });\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const { data } = await addRecipe({\r\n                variables: { \r\n                    ...newRecipe, \r\n                    postAuthor: Auth.getProfile().data.email,\r\n                },\r\n            });\r\n\r\n            setNewRecipe({\r\n                title: '',\r\n                category: '',\r\n                servings: '',\r\n                totalTime: '',\r\n                ingredients: '',\r\n                directions: '',\r\n                imageid: '',\r\n            });\r\n            \r\n            // Auth.login(data.addRecipe)\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"recipeformsection\">\r\n            \r\n            <form onSubmit={handleSubmit} className=\"recipeform\">\r\n                <div className=\"tophalf\">\r\n                    <div className=\"basicinfo\">\r\n                        <input placeholder=\"Recipe Name\" name=\"title\" onChange={handleChange}></input>\r\n                        <select placeholder=\"Category\" name=\"category\" onChange={handleChange}>\r\n                            <option value=\"\">Choose a Category</option>\r\n                            <option value=\"Appetizer\">Appetizer</option>\r\n                            <option value=\"Entres\">Entres</option>\r\n                            <option value=\"Dessert\">Dessert</option>\r\n                            <option value=\"Drinks\">Drinks</option>\r\n                        </select>\r\n                        <input placeholder=\"Servings\" name=\"servings\" onChange={handleChange}></input>\r\n                        <input placeholder=\"Total Time in Mins\" name=\"totalTime\" onChange={handleChange}></input>\r\n                    </div>\r\n                    <div className=\"uploadImage\">\r\n                        <div className=\"previewImage\">\r\n                            {imageSelected ? (\r\n                                <img src={URL.createObjectURL(imageSelected)} className=\"imagepreview\" alt=\"\"></img>\r\n                            ) : (\r\n                                <h1>No Image</h1>\r\n                            )}\r\n                        </div>\r\n                        <input \r\n                            title=\" \"\r\n                            type=\"file\" \r\n                            onChange={(event) => {\r\n                                uploadImage(event.target.files[0]);\r\n                                setImageSelected(event.target.files[0]);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"ingred-instr\">\r\n                    <textarea placeholder=\"Ingredients\" name=\"ingredients\" onChange={handleChange}></textarea>\r\n                    <textarea placeholder=\"Instructions\" name=\"directions\" onChange={handleChange}></textarea>\r\n                </div>\r\n                <div className=\"\">\r\n                    <button className=\"recipeformbutton\" type=\"submit\">\r\n                        Add Recipe\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeForm;","import Recipeform from '../components/RecipeForm'\r\n\r\nconst CreateRecipe = () => {\r\n\r\n    return (\r\n        <div className=\"createrecipepage\">\r\n            <Recipeform />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CreateRecipe;","import React, { useState } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n\r\nimport { ADD_RECIPE } from '../utils/mutations';\r\nimport { QUERY_SINGLE_RECIPE, QUERY_MYPROFILE } from '../utils/queries';\r\n\r\nimport { Image } from 'cloudinary-react';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst SingleRecipe = () => {\r\n    const { recipeId } = useParams();\r\n\r\n    const { loading, data } = useQuery(QUERY_SINGLE_RECIPE, {\r\n        variables: { recipeId: recipeId },\r\n    });\r\n    const recipe = data?.recipe || {};\r\n    // console.log(recipe)\r\n    // console.log(recipe.title);\r\n\r\n    // THIS SHOULD, ON PAPER ADD THE CURRENT OBJECT WHICH IS THE 'recipe'\r\n    // FROM ABOVE AND ADD TO THE USER THAT IS CURRENTLY LOGGED. THAT'S WHAT THE\r\n    // BELOW CODE SHOULD DO\r\n\r\n    // const [ addedrecipe , setAddedrecipe ] = useState({\r\n    //     title: 'hello'\r\n    // });\r\n    // console.log(\"testing\");\r\n    // console.log(addedrecipe);\r\n\r\n    const [addRecipe, { error }] = useMutation(ADD_RECIPE, {\r\n        update(cache, { data: { addRecipe } }) {\r\n\r\n            const { myprofile } = cache.readQuery({ query: QUERY_MYPROFILE });\r\n            cache.writeQuery({\r\n                query: QUERY_MYPROFILE,\r\n                data: { myprofile: {\r\n                    ...myprofile,\r\n                    recipes: [ ...myprofile.recipes, addRecipe]\r\n                }},\r\n            });\r\n        },\r\n    });\r\n\r\n    const handleAddto = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const { data } = await addRecipe({\r\n                variables: {\r\n                    ...recipe,\r\n                }\r\n            });\r\n\r\n            console.log(\"success\");\r\n        } catch (err) {\r\n            console.log(\"it didnt work\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div className=\"singlerecipepage\">\r\n            \r\n            <div>\r\n                <div className=\"titlecard\">\r\n                    <h1>{recipe.title}</h1>\r\n                    {Auth.loggedIn() ? (\r\n                        <>\r\n                            <button onClick={handleAddto} enabled>Add to Cookbook</button>\r\n                        </>\r\n                    ): (\r\n                        <>\r\n                            <button disabled>Add to Cookbook</button>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <hr/>\r\n                <div className=\"generalInfo\">\r\n                    <p>Category: {recipe.category}</p>\r\n                    <p>Number of Servings: {recipe.servings}</p>\r\n                    <p>Total Cook Time: {recipe.totalTime}</p>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"middlepart\">\r\n                    <div className=\"ingredientsList\">\r\n                        <h1>Ingredients</h1>\r\n                        {recipe.ingredients.map((ingredient) => (\r\n                            <p>{ingredient}</p>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"recipeImg\">\r\n                        <Image cloudName=\"du119g90a\" public_id={recipe.imageid} />\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"directionsList\">\r\n                    <h1>Directions</h1>\r\n                    {recipe.directions.map((direction) => (\r\n                        <p>{direction}</p>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleRecipe;","import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nconst TestPicUpload = () => {\r\n\r\n    const [imageSelected, setImageSelected] = useState(\"\");\r\n\r\n    const uploadImage = (files) => {\r\n        console.log(files[0]);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", imageSelected);\r\n        formData.append(\"upload_preset\", \"yun8815z\");\r\n\r\n        Axios.post(\r\n            \"https://api.cloudinary.com/v1_1/du119g90a/image/upload\", \r\n            formData\r\n        ).then((response) => {\r\n            console.log(\"response\");\r\n            console.log(response);\r\n            console.log(\"public ID\");\r\n            console.log(response.data.public_id);\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                type=\"file\" \r\n                onChange={(event) => {\r\n                setImageSelected(event.target.files[0]);\r\n            }}/>\r\n\r\n            <div>\r\n                {imageSelected ? (\r\n                    <img src={URL.createObjectURL(imageSelected)} className=\"imagepreview\" alt=\"\"></img>\r\n                ) : (\r\n                    <h1>No Image</h1>\r\n                )}\r\n            </div>\r\n\r\n            {/* <img src={URL.createObjectURL(imageSelected)} className=\"imagepreview\" alt=\"\"></img> */}\r\n\r\n            <button onClick={uploadImage}>\r\n                Submit Images\r\n            </button>\r\n\r\n            {/* <Image cloudName=\"du119g90a\" public_id=\"pwnexgvvtirluakwa9ee\"/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestPicUpload;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"\">\n      <div className=\"header\">\n\n        <Link className=\"\" to=\"/\">\n          <h1 className=\"appTitle\">MyCookBook</h1>\n        </Link>\n\n        <p className=\"tagline\">\n          Let's Turn Up the Heat!!\n        </p>\n\n        <div className=\"dashboard\">\n          <Link className=\"\" to=\"/recipes\">\n            Recipes\n          </Link>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"\" to=\"/add\">\n                Add New Recipe\n              </Link>\n              <Link className=\"\" to=\"/myprofile\">\n                My Cookbook\n              </Link>\n              <Link className=\"\" onClick={logout} to=\"/\">\n                Logout\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link className=\"\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup'\nimport Profile from './pages/Profile';\nimport Recipespage from './pages/Recipespage';\nimport CreateRecipe from './pages/CreateRecipe';\nimport SingleRecipe from './pages/SingleRecipe';\nimport TestPicUpload from './pages/TestPicupload';\n\nimport Header from './components/Header';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Header />\n        <div className=\"restofpage\">\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          \n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          \n          <Route exact path=\"/myprofile\">\n            <Profile />\n          </Route>\n          \n          <Route exact path=\"/add\">\n            <CreateRecipe />\n          </Route>\n\n          <Route exact path=\"/recipes\">\n            <Recipespage />\n          </Route>\n\n          <Route exact path=\"/recipes/:recipeId\">\n            <SingleRecipe />\n          </Route>\n\n          <Route exact path=\"/pic\">\n            <TestPicUpload />\n          </Route>\n          \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}