[{"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\index.js":"1","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\App.js":"3","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Signup.js":"4","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Login.js":"5","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Home.js":"6","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Profile.js":"7","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\mutations.js":"9","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\queries.js":"10","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\auth.js":"11","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\ProfileList\\index.js":"12","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\PostingList\\index.js":"13","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\index.js":"14","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\App.js":"15","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\reportWebVitals.js":"16","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Login.js":"17","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Profile.js":"18","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Recipespage.js":"19","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Signup.js":"20","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Home.js":"21","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\CreateRecipe.js":"22","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\SingleRecipe.js":"23","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\Header\\index.js":"24","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\queries.js":"25","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\mutations.js":"26","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\auth.js":"27","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\RecipeForm\\index.js":"28","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\UpdateRecipe.js":"29","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\UpdateForm\\index.js":"30"},{"size":500,"mtime":1635201047613,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1635201047616,"results":"33","hashOfConfig":"32"},{"size":1475,"mtime":1635719962223,"results":"34","hashOfConfig":"32"},{"size":3080,"mtime":1635719089185,"results":"35","hashOfConfig":"32"},{"size":2799,"mtime":1635717490310,"results":"36","hashOfConfig":"32"},{"size":684,"mtime":1635705897924,"results":"37","hashOfConfig":"32"},{"size":1840,"mtime":1635728432203,"results":"38","hashOfConfig":"32"},{"size":1405,"mtime":1635720062296,"results":"39","hashOfConfig":"32"},{"size":620,"mtime":1635725532702,"results":"40","hashOfConfig":"32"},{"size":1556,"mtime":1635727244300,"results":"41","hashOfConfig":"32"},{"size":720,"mtime":1635201047618,"results":"42","hashOfConfig":"32"},{"size":1542,"mtime":1635728358534,"results":"43","hashOfConfig":"32"},{"size":706,"mtime":1635727965365,"results":"44","hashOfConfig":"32"},{"size":500,"mtime":1635201047613,"results":"45","hashOfConfig":"46"},{"size":2087,"mtime":1637622221627,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1635201047616,"results":"48","hashOfConfig":"46"},{"size":2718,"mtime":1638304607357,"results":"49","hashOfConfig":"46"},{"size":12280,"mtime":1641312806855,"results":"50","hashOfConfig":"46"},{"size":8339,"mtime":1641312867864,"results":"51","hashOfConfig":"46"},{"size":3010,"mtime":1638304713624,"results":"52","hashOfConfig":"46"},{"size":20215,"mtime":1640217975347,"results":"53","hashOfConfig":"46"},{"size":194,"mtime":1638212533513,"results":"54","hashOfConfig":"46"},{"size":6055,"mtime":1638661748460,"results":"55","hashOfConfig":"46"},{"size":4437,"mtime":1641347076352,"results":"56","hashOfConfig":"46"},{"size":1768,"mtime":1641337059546,"results":"57","hashOfConfig":"46"},{"size":2906,"mtime":1641337063502,"results":"58","hashOfConfig":"46"},{"size":891,"mtime":1636220617618,"results":"59","hashOfConfig":"46"},{"size":13907,"mtime":1641347135816,"results":"60","hashOfConfig":"46"},{"size":10604,"mtime":1641347677801,"results":"61","hashOfConfig":"46"},{"size":12822,"mtime":1641347680554,"results":"62","hashOfConfig":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"ccrf5y",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"ch8s6t",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\index.js",[],["131","132"],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\App.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Login.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Home.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Profile.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\queries.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\auth.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\ProfileList\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\PostingList\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\index.js",[],["133","134"],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\App.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Login.js",["135","136","137"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.login.token);\r\n        }   catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setFormState({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ background: '#006992', pt: 15, pb: 60 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 1.5 }}>\r\n          <Grid item  xs={12} md={3}>\r\n            <Paper sx={{ display: 'flex', flexDirection: 'column', p: 3 }} elevation={3}>\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center', fontSize: 30 }}>\r\n                Memeber Login\r\n              </Grid>\r\n              <TextField \r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }}\r\n                label=\"Email\" \r\n                variant=\"outlined\"                   \r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange} \r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }} \r\n                label=\"Password\" \r\n                variant=\"outlined\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button sx={{ width: 250, borderRadius: 15 }} variant=\"contained\" type='submit' onClick={handleSubmit}>Login</Button>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Profile.js",["138","139"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// IMPORTING EVERYTHING FOR QUERIES AND EVERYTHING FOR MUTATIONS\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { QUERY_SINGLE_USER, QUERY_MYPROFILE } from \"../utils/queries\";\r\nimport { REMOVE_RECIPE } from \"../utils/mutations\";\r\n\r\n// IMPORTANT FOR THE USE OF CLOUDINARY\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Collapse } from \"@mui/material\";\r\n\r\nconst Profile = () => {\r\n  const { userId } = useParams();\r\n  const { loading, data } = useQuery(\r\n    userId ? QUERY_SINGLE_USER : QUERY_MYPROFILE,\r\n    {\r\n      variables: { userId: userId },\r\n    }\r\n  );\r\n\r\n  let user = data?.myprofile || data?.user || {};\r\n  let recipes = user.recipes;\r\n\r\n  console.log(\"User\");\r\n  console.log(user);\r\n  console.log(\"recipes\");\r\n  console.log(recipes);\r\n\r\n  const [userrecipe, setUserRecipe] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setUserRecipe(recipes);\r\n  }, [recipes]);\r\n\r\n  // THESE NEXT LINES OF CODE SHOULD BE ABLE TO DELETE ANY RECIPES WITHIN\r\n  // THE PROFILE PAGE WHICH MEANS ANY RECIPE HELD IN THE USERS RECIPES ARRAY\r\n  // THIS TECHNICALLY SHOULD'T DELETE ANY DUPLICATES OR WHEN A USER ADDS ANOTHER\r\n  // USERS RECIPE OR BASIALLY IT WONT DELETE THE ORIGINAL POST... I THINK\r\n  const [removeRecipe] = useMutation(REMOVE_RECIPE);\r\n\r\n  // THIS DOES THE FILTERING\r\n  let newlist = [];\r\n  const handleFilter = async (event) => {\r\n    let recipecategory = event.target.value;\r\n    newlist = recipes.filter((recipe) => recipe.category === recipecategory);\r\n\r\n    setUserRecipe(newlist);\r\n  };\r\n\r\n  const showAll = async () => {\r\n    setUserRecipe(recipes);\r\n  };\r\n\r\n  const handleDelete = async (event) => {\r\n    // event.preventDefault();\r\n    let recipeId = event.target.id;\r\n    console.log(recipeId);\r\n    console.log(typeof recipeId);\r\n    let newlist = recipes.filter((recipe) => recipe._id !== recipeId);\r\n\r\n    try {\r\n      await removeRecipe({\r\n        variables: { recipeId },\r\n      });\r\n\r\n      console.log(\"success recipe removed\");\r\n\r\n      console.log();\r\n    } catch (e) {\r\n      console.error(e);\r\n      console.log(\"it didnt work\");\r\n    }\r\n\r\n    setUserRecipe(newlist);\r\n  };\r\n\r\n  // THESE CODES ARE FOR THE EXTEND AND COLLAPSE\r\n  const ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    // transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    // marginLeft: 'auto',\r\n    // transition: theme.transitions.create('transform', {\r\n    //   duration: theme.transitions.duration.shortest,\r\n    // }),\r\n  }));\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleExpand = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const ExpandIng = styled((props) => {\r\n    const { expandIng, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    // transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    // marginLeft: 'auto',\r\n    // transition: theme.transitions.create('transform', {\r\n    //   duration: theme.transitions.duration.shortest,\r\n    // }),\r\n  }));\r\n\r\n  const [ingExpanded, setingExpanded] = useState(false);\r\n\r\n  const handleingExpand = () => {\r\n    setingExpanded(!ingExpanded);\r\n  };\r\n\r\n  if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\r\n    return <Redirect to=\"/myprofile\" />;\r\n  }\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (!user?.username) {\r\n    return (\r\n      <h4 className=\"profileloggedout\">\r\n        You need to be logged in to see your profile page. Use the navigation\r\n        links above to sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {/* <Grid\r\n        sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontSize: 35,\r\n            fontWeight: \"bold\",\r\n            position: \"absolute\",\r\n            background: \"white\",\r\n            p: 1,\r\n            color: \"#114b5f\",\r\n            border: 2,\r\n            borderRadius: 10,\r\n          }}\r\n        >\r\n          My Cookbook\r\n        </Typography>\r\n        <Image\r\n          width=\"100%\"\r\n          cloudName=\"du119g90a\"\r\n          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/c_crop,h_720,w_1270/v1637261536/headerimage4_kwi90d.jpg\"\r\n        />\r\n      </Grid> */}\r\n      <Grid\r\n        sx={{\r\n          background: \"#4D9DE0\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          pt: 1,\r\n          pb: 1,\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ fontSize: 15, m: 1 }}\r\n          onClick={showAll}\r\n        >\r\n          Show All\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ fontSize: 15, m: 1 }}\r\n          value=\"Drinks\"\r\n          onClick={handleFilter}\r\n        >\r\n          Drinks\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ fontSize: 15, m: 1 }}\r\n          value=\"Appetizer\"\r\n          onClick={handleFilter}\r\n        >\r\n          Appetizer\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ fontSize: 15, m: 1 }}\r\n          value=\"Entree\"\r\n          onClick={handleFilter}\r\n        >\r\n          Entree\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ fontSize: 15, m: 1 }}\r\n          value=\"Dessert\"\r\n          onClick={handleFilter}\r\n        >\r\n          Dessert\r\n        </Button>\r\n      </Grid>\r\n\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Grid\r\n          item\r\n          md={10}\r\n          sx={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\r\n        >\r\n          {userrecipe &&\r\n            userrecipe.map((recipe) => (\r\n              <Grid item md={6}>\r\n                <Card\r\n                  key={recipe._id}\r\n                  elevation={5}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    m: 2,\r\n                  }}\r\n                >\r\n                  <Link to={`/recipes/${recipe._id}`}>\r\n                    <Grid item sx={{ display: \"flex\" }}>\r\n                      <Grid item md={4.2} sx={{ display: \"flex\", p: 1.25 }}>\r\n                        {recipe.imageid ? (\r\n                          <Image\r\n                            width=\"100%\"\r\n                            cloudName=\"du119g90a\"\r\n                            public_id={recipe.imageid}\r\n                          />\r\n                        ) : (\r\n                          <Image\r\n                            width=\"100%\"\r\n                            cloudName=\"du119g90a\"\r\n                            public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item md={8.5}>\r\n                        <CardHeader\r\n                          titleTypographyProps={{\r\n                            fontSize: 22,\r\n                          }}\r\n                          subheaderTypographyProps={{\r\n                            fontSize: 15,\r\n                          }}\r\n                          title={recipe.title}\r\n                          subheader={recipe.createdAt}\r\n                        />\r\n\r\n                        <CardContent\r\n                          sx={{ display: \"flex\", flexDirection: \"row\" }}\r\n                        >\r\n                          <Grid item md={5.5}>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Prep Time:{\" \"}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Cook Time:{\" \"}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Total Time: {recipe.totalTime}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Servings: {recipe.servings}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item md={6.5}>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Category: {recipe.category}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Cuisine: {recipe.cuisine}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Diet: {recipe.diettype}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 18 }}>\r\n                              Yield Per Serving:{\" \"}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </CardContent>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid>\r\n                      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                        <CardContent>\r\n                          <Typography paragraph>Instructions</Typography>\r\n                          {recipe.directions.map((direction) => (\r\n                            <Typography paragraph>{direction}</Typography>\r\n                          ))}\r\n                        </CardContent>\r\n                      </Collapse>\r\n                    </Grid>\r\n                    <Grid>\r\n                      <Collapse in={ingExpanded} timeout=\"auto\" unmountOnExit>\r\n                        <CardContent>\r\n                          <Typography paragraph>Ingredients</Typography>\r\n                          {recipe.ingredients.map((ingredient) => (\r\n                            <Typography paragraph>{ingredient}</Typography>\r\n                          ))}\r\n                        </CardContent>\r\n                      </Collapse>\r\n                    </Grid>\r\n                  </Link>\r\n\r\n                  <Grid iem sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <button onClick={handleDelete} id={recipe._id}>\r\n                      <Typography>Delete</Typography>\r\n                    </button>\r\n                    <button>\r\n                      <Link to={`/update/${recipe._id}`}>\r\n                        <Typography>Update</Typography>\r\n                      </Link>\r\n                    </button>\r\n                    <button>\r\n                      <ExpandMore expand={expanded} onClick={handleExpand}>\r\n                        <Typography>Instructions</Typography>\r\n                      </ExpandMore>\r\n                    </button>\r\n                    <button>\r\n                      <ExpandIng expand={ingExpanded} onClick={handleingExpand}>\r\n                        <Typography>Ingredients</Typography>\r\n                      </ExpandIng>\r\n                    </button>\r\n                  </Grid>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Recipespage.js",["140"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Masonry from \"react-masonry-css\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_RECIPES } from \"../utils/queries\";\r\n\r\n// IMPORTANT FOR CLOUDINARY\r\n// import Axios from 'axios';\r\nimport { Image } from \"cloudinary-react\";\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Recipespage = () => {\r\n  // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\r\n  // BY THE USER\r\n  const { loading, data } = useQuery(QUERY_RECIPES);\r\n  let recipes = data?.recipes || {};\r\n\r\n  // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\r\n  // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\r\n  // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\r\n  let uniqueRecipes = [];\r\n  for (let a = 0; a < recipes.length; a++) {\r\n    let exists = false;\r\n    for (let b = 0; b < uniqueRecipes.length; b++) {\r\n      if (recipes[a].title === uniqueRecipes[b].title) {\r\n        exists = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!exists) {\r\n      uniqueRecipes.push(recipes[a]);\r\n    }\r\n  }\r\n  // console.log(\"uniqueRecipes\");\r\n  // console.log(uniqueRecipes);\r\n\r\n  const [recipeslist, setRecipeslist] = useState([\"\"]);\r\n\r\n  useEffect(() => {\r\n    setRecipeslist(uniqueRecipes);\r\n  }, [recipes]);\r\n\r\n  console.log(\"recipeslist\");\r\n  console.log(recipeslist);\r\n\r\n  let filtered = [];\r\n  const handlefilter = async (event) => {\r\n    let recipecategory = event.target.value;\r\n    console.log(recipecategory);\r\n    filtered = uniqueRecipes.filter(\r\n      (recipe) => recipe.category === recipecategory\r\n    );\r\n\r\n    setRecipeslist(filtered);\r\n    // event.preventDefault();\r\n    // console.log(event.target.value);\r\n\r\n    // for (let a = 0; a < uniqueRecipes.length; a++) {\r\n    //     if (uniqueRecipes[a].category === event.target.value) {\r\n    //         filtered.push(uniqueRecipes[a]);\r\n    //         console.log(\"test\");\r\n    //         console.log(filtered);\r\n    //     }\r\n    // }\r\n    // console.log(\"test\");\r\n    // console.log(filtered);\r\n    // setRecipeslist(filtered);\r\n  };\r\n  // console.log(\"testlist\");\r\n  // console.log(filtered);\r\n  // console.log(\"newrecipelist\");\r\n  // console.log(recipeslist);\r\n\r\n  const handleShowAll = async () => {\r\n    setRecipeslist(uniqueRecipes);\r\n  };\r\n\r\n  const breakpoints = {\r\n    default: 5,\r\n    700: 1,\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {/* <Grid\r\n        sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontSize: 35,\r\n            fontWeight: \"bold\",\r\n            position: \"absolute\",\r\n            background: \"white\",\r\n            p: 1.5,\r\n            color: \"primary.dark\",\r\n            border: 2,\r\n            borderRadius: 10,\r\n          }}\r\n        >\r\n          ALL DRINKS and RECIPES\r\n        </Typography>\r\n        <Image\r\n          width=\"100%\"\r\n          cloudName=\"du119g90a\"\r\n          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/c_scale,h_720,w_1270/v1637260922/headerimage1_abzfej.jpg\"\r\n        />\r\n      </Grid> */}\r\n      <Grid\r\n        sx={{\r\n          background: \"#F1FFFA\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          pt: 1,\r\n          pb: 1,\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handleShowAll}\r\n          color=\"info\"\r\n          sx={{ fontSize: 13, m: 1 }}\r\n        >\r\n          Show All\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          value=\"Drinks\"\r\n          onClick={handlefilter}\r\n          sx={{ fontSize: 13, m: 1 }}\r\n        >\r\n          Drinks\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          value=\"Appetizer\"\r\n          onClick={handlefilter}\r\n          sx={{ fontSize: 13, m: 1 }}\r\n        >\r\n          Appetizers\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          value=\"Entree\"\r\n          onClick={handlefilter}\r\n          sx={{ fontSize: 13, m: 1 }}\r\n        >\r\n          Entrees\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          value=\"Dessert\"\r\n          onClick={handlefilter}\r\n          sx={{ fontSize: 13, m: 1 }}\r\n        >\r\n          Desserts\r\n        </Button>\r\n      </Grid>\r\n\r\n      <Box\r\n        sx={{\r\n          background: \"#364156\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          pt: 3,\r\n          pb: 3,\r\n        }}\r\n      >\r\n        <Grid item md={8}>\r\n          <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n          >\r\n            {recipeslist.map((recipe) => (\r\n              <Grid item sx={{ m: 1 }}>\r\n                <Card elevation={3}>\r\n                  <Link to={`/recipes/${recipe._id}`}>\r\n                    <Grid>\r\n                      <CardHeader\r\n                        titleTypographyProps={{\r\n                          fontSize: 20,\r\n                        }}\r\n                        subheaderTypographyProps={{\r\n                          fontSize: 15,\r\n                        }}\r\n                        title={recipe.title}\r\n                        subheader={recipe.createdAt}\r\n                      />\r\n                      <CardMedia\r\n                        sx={{\r\n                          ml: 1,\r\n                          mr: 1,\r\n                          mt: 0.5,\r\n                          mb: 0.5,\r\n                          display: \"flex\",\r\n                          borderStyle: \"solid\",\r\n                          borderWidth: 4,\r\n                          borderColor: \"#373F51\",\r\n                        }}\r\n                      >\r\n                        {recipe.imageid ? (\r\n                          <Image\r\n                            width=\"100%\"\r\n                            cloudName=\"du119g90a\"\r\n                            public_id={recipe.imageid}\r\n                          />\r\n                        ) : (\r\n                          <Image\r\n                            width=\"100%\"\r\n                            cloudName=\"du119g90a\"\r\n                            public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\r\n                          />\r\n                        )}\r\n                      </CardMedia>\r\n                      <CardContent\r\n                        sx={{\r\n                          ml: 0.5,\r\n                          mr: 0.5,\r\n                          mt: 0.5,\r\n                          mb: 0.5,\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Typography sx={{ fontSize: 18 }}>\r\n                          Category: {recipe.category}\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 18 }}>\r\n                          Cuisine: {recipe.cuisine}\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 18 }}>\r\n                          Diet: {recipe.diettype}\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 18 }}>\r\n                          Servings: {recipe.servings}{\" \"}\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: 18 }}>\r\n                          Total Time: {recipe.totalTime}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Grid>\r\n                  </Link>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Masonry>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Recipespage;\r\n","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Signup.js",["141","142","143"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nconst Signup = () => {\r\n    const [formState, setFormState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '', \r\n    });\r\n    \r\n    const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n              variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.addUser.token);\r\n        }   catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ background: '#006992', pt: 15, pb: 50 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 1.5 }}>\r\n          <Grid item sx={12} md={3}>\r\n            <Paper sx={{ display: 'flex', flexDirection: 'column', p: 3 }} elevation={3}>\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center', fontSize: 30 }}>\r\n                Sign Up\r\n              </Grid>\r\n              <TextField \r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }}\r\n                label=\"Username\" \r\n                variant=\"outlined\"                   \r\n                name=\"username\"\r\n                type=\"username\"\r\n                value={formState.username}\r\n                onChange={handleChange} \r\n              />\r\n              <TextField \r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }} \r\n                label=\"Email\" \r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}            \r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\" \r\n                sx={{ m:3 }}\r\n                label=\"Password\" \r\n                variant=\"outlined\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange} \r\n              />\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button sx={{ width: 250, borderRadius: 15 }} variant=\"contained\" onClick={handleSubmit}>Sign Up</Button>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Home.js",["144"],"import React from \"react\";\n// import { useEffect } from 'react';\n// import { useState } from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_RECIPES } from \"../utils/queries\";\n\nimport { Image } from \"cloudinary-react\";\n\n// THESE ARE FOR THE MUI COMPONENTS\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\n// import CardHeader from '@mui/material/CardHeader';\n// import CardContent from '@mui/material/CardContent';\n// import CardActions from '@mui/material/CardActions';\n\nconst Home = () => {\n  // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n  // THIS WILL RANDOMLY PICK 10 RANDOM RECIPES MADE BY USERS TO SHOW ON THE HOMEPAGE\n  // THIS ACTS AS A TEASER OR A SAMPLE\n  const { loading, data } = useQuery(QUERY_RECIPES);\n  const recipes = data?.recipes || [];\n\n  // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\n  // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\n  // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\n  const uniqueRecipes = [];\n  for (let a = 0; a < recipes.length; a++) {\n    let exists = false;\n    for (let b = 0; b < uniqueRecipes.length; b++) {\n      if (recipes[a].title === uniqueRecipes[b].title) {\n        exists = true;\n        break;\n      }\n    }\n    if (!exists) {\n      uniqueRecipes.push(recipes[a]);\n    }\n  }\n  // console.log(\"new\");\n  console.log(uniqueRecipes);\n\n  // THESE ARRAYS SHOULD HOLD RECIPES BASED ON THE CATEGORY\n  // THINK OF IT LIKE AN FILTERING\n  const drinks = [];\n  const drinknum = 5;\n  const appetizers = [];\n  const appnum = 4;\n  const entrees = [];\n  const entreesnum = 4;\n  const desserts = [];\n  const desnum = 5;\n  for (let a = 0; a < uniqueRecipes.length; a++) {\n    if (uniqueRecipes[a].category === \"Drinks\" && drinks.length < drinknum) {\n      drinks.push(uniqueRecipes[a]);\n    }\n    if (\n      uniqueRecipes[a].category === \"Appetizer\" &&\n      appetizers.length < appnum\n    ) {\n      appetizers.push(uniqueRecipes[a]);\n    }\n    if (uniqueRecipes[a].category === \"Entree\" && entrees.length < entreesnum) {\n      entrees.push(uniqueRecipes[a]);\n    }\n    if (uniqueRecipes[a].category === \"Dessert\" && desserts.length < desnum) {\n      desserts.push(uniqueRecipes[a]);\n    }\n  }\n\n  return (\n    <Box sx={{ background: \"#5B7B7A\" }}>\n      {/* <Grid>\n        <Typography sx={{ fontSize: 35, fontWeight: 'bold', position: 'absolute', background: '#cbf7ed', p: 3, color: 'primary.dark', border:1, borderRadius: 10 }}>Welcome to mmm!Book!!</Typography>\n        <Image width='100%' cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/c_scale,h_720,w_1270/v1637261149/headerimage0_djjzmj.jpg\"/>\n      </Grid> */}\n\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Grid\n          item\n          md={8}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {drinks.map((drink) => (\n            <Grid item xs={10.5} md={2.25}>\n              <Card elevation={4} sx={{ m: 2 }}>\n                <Link to={`/recipes/${drink._id}`}>\n                  <Grid item sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <CardMedia>\n                      {drink.imageid ? (\n                        <Image\n                          width=\"100%\"\n                          Height=\"275\"\n                          cloudName=\"du119g90a\"\n                          public_id={drink.imageid}\n                        />\n                      ) : (\n                        <Image\n                          width=\"100%\"\n                          Height=\"275\"\n                          cloudName=\"du119g90a\"\n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Grid sx={{ m: 1, height: 175 }}>\n                      <Typography sx={{ fontSize: 20 }}>\n                        {drink.title}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Category: {drink.category}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Cuisine: {drink.cuisine}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Diet: {drink.diettype}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Servings: {drink.servings}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Total Cook Time: {drink.totalTime} min\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <br />\n\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Grid\n          md={8}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {appetizers.map((appetizer) => (\n            <Grid item xs={10.5} md={2.35}>\n              <Card elevation={4} sx={{ m: 2 }}>\n                <Link to={`/recipes/${appetizer._id}`}>\n                  <Grid item sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <CardMedia>\n                      {appetizer.imageid ? (\n                        <Image\n                          width=\"100%\"\n                          Height=\"275\"\n                          cloudName=\"du119g90a\"\n                          public_id={appetizer.imageid}\n                        />\n                      ) : (\n                        <Image\n                          width=\"100%\"\n                          Height=\"275\"\n                          cloudName=\"du119g90a\"\n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Grid sx={{ m: 1, height: 175 }}>\n                      <Typography sx={{ fontSize: 20 }}>\n                        {appetizer.title}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Category: {appetizer.category}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Cuisine: {appetizer.cuisine}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Diet: {appetizer.diettype}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Servings: {appetizer.servings}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Total Cook Time: {appetizer.totalTime} min\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Grid\n          md={8}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {entrees.map((entree) => (\n            <Grid item xs={10.5} md={2.35}>\n              <Card elevation={4} sx={{ m: 2 }}>\n                <Link to={`/recipes/${entree._id}`}>\n                  <Grid item sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <CardMedia>\n                      {entree.imageid ? (\n                        <Image\n                          width=\"100%\"\n                          Height=\"250\"\n                          cloudName=\"du119g90a\"\n                          public_id={entree.imageid}\n                        />\n                      ) : (\n                        <Image\n                          width=\"100%\"\n                          Height=\"250\"\n                          cloudName=\"du119g90a\"\n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Grid sx={{ m: 1, height: 175 }}>\n                      <Typography sx={{ fontSize: 20 }}>\n                        {entree.title}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Category: {entree.category}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Cuisine: {entree.cuisine}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Diet: {entree.diettype}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Servings: {entree.servings}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Total Cook Time: {entree.totalTime} min\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <br />\n\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Grid\n          item\n          md={8}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {desserts.map((dessert) => (\n            <Grid item xs={10.5} md={2.35}>\n              <Card elevation={4} sx={{ m: 2 }}>\n                <Link to={`/recipes/${dessert._id}`}>\n                  <Grid item sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <CardMedia>\n                      {dessert.imageid ? (\n                        <Image\n                          width=\"100%\"\n                          Height=\"250\"\n                          cloudName=\"du119g90a\"\n                          public_id={dessert.imageid}\n                        />\n                      ) : (\n                        <Image\n                          width=\"100%\"\n                          Height=\"250\"\n                          cloudName=\"du119g90a\"\n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Grid sx={{ m: 1, height: 175 }}>\n                      <Typography sx={{ fontSize: 20 }}>\n                        {dessert.title}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Category: {dessert.category}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Cuisine: {dessert.cuisine}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Diet: {dessert.diettype}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Servings: {dessert.servings}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Total Cook Time: {dessert.totalTime} min\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Box>\n\n    // <div>\n    //    <Box sx={{ background: '#406e8e' }}>\n    //      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n    //        <Typography sx={{ fontSize: 35, fontWeight: 'bold', position: 'absolute', background: '#cbf7ed', p: 3, color: 'primary.dark', border:1, borderRadius: 10 }}>Welcome to mmm!Book!!</Typography>\n    //        <Image width='100%' cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/c_scale,h_720,w_1270/v1637261149/headerimage0_djjzmj.jpg\"/>\n    //      </Box>\n\n    //      {/* THIS IS FOR DRINKS */}\n\n    //     <br /><br />\n\n    //     {/* THIS IS FOR THE APPETIZERS*/}\n    //     <Grid container spacing={5} sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }} xs={12}>\n    //         {appetizers.map((appetizer) => (\n    //           <Grid item>\n    //             <Card sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: 300, height: 450}}>\n    //               <Link to={`/recipes/${ appetizer._id }`}>\n    //                 <CardMedia sx={{ p: 2 }}>\n    //                   {appetizer.imageid ? (\n    //                     <Image\n    //                       width=\"100%\"\n    //                       cloudName=\"du119g90a\"\n    //                       public_id={ appetizer.imageid }\n    //                     />\n    //                   ) : (\n    //                     <Image\n    //                       width=\"100%\"\n    //                       cloudName=\"du119g90a\"\n    //                       public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n    //                     />\n    //                   )}\n    //                 </CardMedia>\n    //                 <Box sx={{ p:2, pl: 2.5, pr: 2.5 }}>\n    //                     <Typography sx={{ fontSize: 20 }}>\n    //                       {appetizer.title}\n    //                     </Typography>\n    //                     <br/>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Category {appetizer.category}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Cuisine: {appetizer.cuisine}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Diet: {appetizer.diettype}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Servings: {appetizer.servings}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Total Cook Time: {appetizer.totalTime} min\n    //                     </Typography>\n    //                   </Box>\n    //               </Link>\n    //             </Card>\n    //           </Grid>\n    //         ))}\n    //     </Grid>\n\n    //     <br /><br />\n\n    //     {/* THIS IS FOR THE ENTREES*/}\n    //     <Grid container spacing={5} sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }} xs={12}>\n    //         {entrees.map((entree) => (\n    //           <Grid item>\n    //             <Card sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: 300, height: 450}}>\n    //               <Link to={`/recipes/${ entree._id }`}>\n    //                 <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n    //                   <CardMedia sx={{ p: 2 }}>\n    //                     {entree.imageid ? (\n    //                       <Image\n    //                         width=\"100%\"\n    //                         cloudName=\"du119g90a\"\n    //                         public_id={ entree.imageid }\n    //                       />\n    //                     ) : (\n    //                       <Image\n    //                         width=\"100%\"\n    //                         cloudName=\"du119g90a\"\n    //                         public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n    //                       />\n    //                     )}\n    //                   </CardMedia>\n    //                   <Box sx={{ p:2, pl: 2.5, pr: 2.5 }}>\n    //                     <Typography sx={{ fontSize: 20 }}>\n    //                       {entree.title}\n    //                     </Typography>\n    //                     <br/>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Category {entree.category}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Cuisine: {entree.cuisine}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Diet: {entree.diettype}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Servings: {entree.servings}\n    //                     </Typography>\n    //                     <Typography sx={{ fontSize: 15 }}>\n    //                       Total Cook Time: {entree.totalTime} min\n    //                     </Typography>\n    //                   </Box>\n    //                 </Box>\n    //               </Link>\n    //             </Card>\n    //           </Grid>\n    //         ))}\n    //     </Grid>\n\n    //     <br /><br />\n\n    //     {/* THIS IS FOR THE DESSERTS*/}\n    //     <Grid container spacing={5} sx={{ p:2, display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\n    //       {desserts.map((dessert) => (\n    //         <Grid item xs={12} sm={6} lg={3.5}>\n    //           <Card sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: 250}}>\n    //             <Link to={`/recipes/${ dessert._id }`}>\n    //               <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n    //                 <CardMedia sx={{ width: 150, p:1, pl: 3 }}>\n    //                   {dessert.imageid ? (\n    //                     <Image\n    //                       width='100%'\n    //                       cloudName=\"du119g90a\"\n    //                       public_id={ dessert.imageid }\n    //                     />\n    //                   ) : (\n    //                     <Image\n    //                       width='100%'\n    //                       cloudName=\"du119g90a\"\n    //                       public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n    //                     />\n    //                   )}\n    //                 </CardMedia>\n    //                 <Box sx={{ p:2 }}>\n    //                   <Typography sx={{ fontSize: 20 }}>\n    //                     {dessert.title}\n    //                   </Typography>\n    //                   <br/>\n    //                   <Typography sx={{ fontSize: 15 }}>\n    //                     Category {dessert.category}\n    //                   </Typography>\n    //                   <Typography sx={{ fontSize: 15 }}>\n    //                     Cuisine: {dessert.cuisine}\n    //                   </Typography>\n    //                   <Typography sx={{ fontSize: 15 }}>\n    //                     Diet: {dessert.diettype}\n    //                   </Typography>\n    //                   <Typography sx={{ fontSize: 15 }}>\n    //                     Servings: {dessert.servings}\n    //                   </Typography>\n    //                   <Typography sx={{ fontSize: 15 }}>\n    //                     Total Cook Time: {dessert.totalTime} min\n    //                   </Typography>\n    //                 </Box>\n    //               </Box>\n    //             </Link>\n    //           </Card>\n    //         </Grid>\n    //       ))}\n    //     </Grid>\n    //   </Box>\n    // </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\CreateRecipe.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\SingleRecipe.js",["145","146"],"import React from 'react';\r\n// import { useEffect } from 'react';\r\n// import { useState } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n\r\nimport { ADD_RECIPE } from '../utils/mutations';\r\nimport { QUERY_SINGLE_RECIPE } from '../utils/queries';\r\nimport { QUERY_MYPROFILE } from '../utils/queries';\r\n\r\nimport { Image } from 'cloudinary-react';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n// MUI COMPONENTS\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst SingleRecipe = () => {\r\n    const { recipeId } = useParams();\r\n\r\n    const { loading, data } = useQuery(QUERY_SINGLE_RECIPE, {\r\n        variables: { recipeId: recipeId },\r\n    });\r\n    const recipe = data?.recipe || {};\r\n\r\n    console.log(recipe)\r\n    console.log(recipe.title);\r\n\r\n    // THIS SHOULD, ON PAPER ADD THE CURRENT OBJECT WHICH IS THE 'recipe'\r\n    // FROM ABOVE AND ADD TO THE USER THAT IS CURRENTLY LOGGED. THAT'S WHAT THE\r\n    // BELOW CODE SHOULD DO\r\n\r\n    const [addRecipe, { error }] = useMutation(ADD_RECIPE, {\r\n        update(cache, { data: { addRecipe } }) {\r\n\r\n            const { myprofile } = cache.readQuery({ query: QUERY_MYPROFILE });\r\n            cache.writeQuery({\r\n                query: QUERY_MYPROFILE,\r\n                data: { myprofile: {\r\n                    ...myprofile,\r\n                    recipes: [ ...myprofile.recipes, addRecipe]\r\n                }},\r\n            });\r\n        },\r\n    });\r\n\r\n    const handleAddto = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const { data } = await addRecipe({\r\n                variables: {\r\n                    ...recipe,\r\n                }\r\n            });\r\n\r\n            console.log(\"success\");\r\n        } catch (err) {\r\n            console.log(\"it didnt work\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ background: '#456990', p:1 }}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', m: 1.5 }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Paper sx={{ p:3 }} elevation={3}>\r\n                        <Grid item sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n                            <Grid>\r\n                                <Grid sx={{ fontSize: 24 }}>\r\n                                    <p>{recipe.title}</p>\r\n                                    <p>{recipe.createdAt}</p>\r\n                                </Grid>\r\n                                <br/>\r\n                                <hr/>\r\n                                <br/>\r\n                                <Grid>\r\n                                    <Typography sx={{ fontSize: 20 }}>Category: { recipe.category }</Typography>\r\n                                    <Typography sx={{ fontSize: 20 }}>Servings: { recipe.servings }</Typography>\r\n                                    <Typography sx={{ fontSize: 20 }}>Total Cook Time: { recipe.totalTime } mins</Typography>\r\n                                    <Typography sx={{ fontSize: 20 }}>Cuisine: { recipe.cuisine }</Typography>\r\n                                    <Typography sx={{ fontSize: 20 }}>Diet: { recipe.diettype }</Typography>\r\n                                </Grid>\r\n                                <br/>\r\n                            </Grid>\r\n                            <Grid md={5.5}>\r\n                                { recipe.imageid ? ( \r\n                                    <Image width='100%' cloudName=\"du119g90a\" public_id={recipe.imageid} />\r\n                                ) : (\r\n                                    <Image width='100%' cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"/>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br/>\r\n                        <hr/>\r\n                        <br/>\r\n                        <Grid>\r\n                            <Grid>\r\n                                Ingredients\r\n                                {recipe.ingredients.map((ingredient) => (\r\n                                    <Typography sx={{ fontSize: 20, pt: 0.7, pb: 0.7 }}>{ingredient}</Typography>\r\n                                ))}\r\n                            </Grid>\r\n                            <br/>\r\n                            <hr/>\r\n                            <br/>\r\n                            <Grid>\r\n                                Instructions\r\n                                {recipe.directions.map((direction) => (\r\n                                    <Typography sx={{ fontSize: 20, pt: 0.7, pb: 0.7 }}>{direction}</Typography>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br/>\r\n                        <hr/>\r\n                        <br/>\r\n                        <Grid item sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                            {Auth.loggedIn() ? ( \r\n                                <>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddto} variant=\"contained\" color=\"error\">\r\n                                            <Typography sx={{ color: 'white', fontSize: 20 }}>Add to Cookbook</Typography>\r\n                                        </Button>\r\n                                    </Box>\r\n                                </>\r\n                            ) : ( \r\n                                <>\r\n                                </>\r\n                            )}\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SingleRecipe;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\queries.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\auth.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\RecipeForm\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\UpdateRecipe.js",["147","148","149","150","151","152","153","154","155","156","157","158","159"],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\UpdateForm\\index.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":19,"column":21,"nodeType":"168","messageId":"169","endLine":19,"endColumn":26},{"ruleId":"166","severity":1,"message":"171","line":19,"column":28,"nodeType":"168","messageId":"169","endLine":19,"endColumn":32},{"ruleId":"166","severity":1,"message":"172","line":25,"column":8,"nodeType":"168","messageId":"169","endLine":25,"endColumn":17},{"ruleId":"166","severity":1,"message":"173","line":28,"column":8,"nodeType":"168","messageId":"169","endLine":28,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":55,"column":6,"nodeType":"176","endLine":55,"endColumn":15,"suggestions":"177"},{"ruleId":"166","severity":1,"message":"167","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":24,"column":23,"nodeType":"168","messageId":"169","endLine":24,"endColumn":28},{"ruleId":"166","severity":1,"message":"171","line":24,"column":30,"nodeType":"168","messageId":"169","endLine":24,"endColumn":34},{"ruleId":"166","severity":1,"message":"178","line":27,"column":11,"nodeType":"168","messageId":"169","endLine":27,"endColumn":18},{"ruleId":"166","severity":1,"message":"170","line":39,"column":25,"nodeType":"168","messageId":"169","endLine":39,"endColumn":30},{"ruleId":"166","severity":1,"message":"171","line":57,"column":21,"nodeType":"168","messageId":"169","endLine":57,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"179","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":13},{"ruleId":"166","severity":1,"message":"180","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":12},{"ruleId":"166","severity":1,"message":"181","line":16,"column":8,"nodeType":"168","messageId":"169","endLine":16,"endColumn":17},{"ruleId":"166","severity":1,"message":"182","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":16},{"ruleId":"166","severity":1,"message":"183","line":19,"column":10,"nodeType":"168","messageId":"169","endLine":19,"endColumn":15},{"ruleId":"174","severity":1,"message":"184","line":32,"column":9,"nodeType":"185","endLine":32,"endColumn":36},{"ruleId":"166","severity":1,"message":"186","line":42,"column":9,"nodeType":"168","messageId":"169","endLine":42,"endColumn":23},{"ruleId":"166","severity":1,"message":"187","line":53,"column":9,"nodeType":"168","messageId":"169","endLine":53,"endColumn":22},{"ruleId":"166","severity":1,"message":"188","line":77,"column":9,"nodeType":"168","messageId":"169","endLine":77,"endColumn":21},{"ruleId":"166","severity":1,"message":"189","line":149,"column":10,"nodeType":"168","messageId":"169","endLine":149,"endColumn":23},{"ruleId":"166","severity":1,"message":"190","line":149,"column":25,"nodeType":"168","messageId":"169","endLine":149,"endColumn":41},{"ruleId":"166","severity":1,"message":"191","line":153,"column":9,"nodeType":"168","messageId":"169","endLine":153,"endColumn":21},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uniqueRecipes'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'loading' is assigned a value but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'MenuItem' is defined but never used.","'Image' is defined but never used.","The 'recipe' logical expression could make the dependencies of useEffect Hook (at line 62) change on every render. To fix this, wrap the initialization of 'recipe' in its own useMemo() Hook.","VariableDeclarator","'ingredientList' is assigned a value but never used.","'directionList' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'imageSelected' is assigned a value but never used.","'setImageSelected' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},"Update the dependencies array to be: [recipes, uniqueRecipes]",{"range":"197","text":"198"},[1765,1774],"[recipes, uniqueRecipes]"]