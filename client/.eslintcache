[{"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\index.js":"1","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\App.js":"3","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Signup.js":"4","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Login.js":"5","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Home.js":"6","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Profile.js":"7","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\mutations.js":"9","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\queries.js":"10","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\auth.js":"11","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\ProfileList\\index.js":"12","C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\PostingList\\index.js":"13","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\index.js":"14","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\App.js":"15","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\reportWebVitals.js":"16","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Login.js":"17","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Profile.js":"18","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Recipespage.js":"19","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Signup.js":"20","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Home.js":"21","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\CreateRecipe.js":"22","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\SingleRecipe.js":"23","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\Header\\index.js":"24","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\queries.js":"25","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\mutations.js":"26","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\auth.js":"27","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\RecipeForm\\index.js":"28","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\UpdateRecipe.js":"29"},{"size":500,"mtime":1635201047613,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1635201047616,"results":"32","hashOfConfig":"31"},{"size":1475,"mtime":1635719962223,"results":"33","hashOfConfig":"31"},{"size":3080,"mtime":1635719089185,"results":"34","hashOfConfig":"31"},{"size":2799,"mtime":1635717490310,"results":"35","hashOfConfig":"31"},{"size":684,"mtime":1635705897924,"results":"36","hashOfConfig":"31"},{"size":1840,"mtime":1635728432203,"results":"37","hashOfConfig":"31"},{"size":1405,"mtime":1635720062296,"results":"38","hashOfConfig":"31"},{"size":620,"mtime":1635725532702,"results":"39","hashOfConfig":"31"},{"size":1556,"mtime":1635727244300,"results":"40","hashOfConfig":"31"},{"size":720,"mtime":1635201047618,"results":"41","hashOfConfig":"31"},{"size":1542,"mtime":1635728358534,"results":"42","hashOfConfig":"31"},{"size":706,"mtime":1635727965365,"results":"43","hashOfConfig":"31"},{"size":500,"mtime":1635201047613,"results":"44","hashOfConfig":"45"},{"size":2087,"mtime":1637622221627,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1635201047616,"results":"47","hashOfConfig":"45"},{"size":2718,"mtime":1638304607357,"results":"48","hashOfConfig":"45"},{"size":18328,"mtime":1638391843183,"results":"49","hashOfConfig":"45"},{"size":7482,"mtime":1638391804413,"results":"50","hashOfConfig":"45"},{"size":3010,"mtime":1638304713624,"results":"51","hashOfConfig":"45"},{"size":12160,"mtime":1638138857243,"results":"52","hashOfConfig":"45"},{"size":194,"mtime":1638212533513,"results":"53","hashOfConfig":"45"},{"size":5901,"mtime":1638137894799,"results":"54","hashOfConfig":"45"},{"size":2824,"mtime":1637363811623,"results":"55","hashOfConfig":"45"},{"size":2021,"mtime":1638120903419,"results":"56","hashOfConfig":"45"},{"size":2514,"mtime":1638122020042,"results":"57","hashOfConfig":"45"},{"size":891,"mtime":1636220617618,"results":"58","hashOfConfig":"45"},{"size":11848,"mtime":1638645341996,"results":"59","hashOfConfig":"45"},{"size":12987,"mtime":1638645329890,"results":"60","hashOfConfig":"45"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"ccrf5y",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"ch8s6t",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\index.js",[],["127","128"],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\App.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Login.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Home.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\pages\\Profile.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\queries.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\utils\\auth.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\ProfileList\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\basic account setup for react\\acount-ver2\\client\\src\\components\\PostingList\\index.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\index.js",[],["129","130"],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\App.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Login.js",["131","132","133"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.login.token);\r\n        }   catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setFormState({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ background: '#006992', pt: 15, pb: 60 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 1.5 }}>\r\n          <Grid item  xs={12} md={3}>\r\n            <Paper sx={{ display: 'flex', flexDirection: 'column', p: 3 }} elevation={3}>\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center', fontSize: 30 }}>\r\n                Memeber Login\r\n              </Grid>\r\n              <TextField \r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }}\r\n                label=\"Email\" \r\n                variant=\"outlined\"                   \r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange} \r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }} \r\n                label=\"Password\" \r\n                variant=\"outlined\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button sx={{ width: 250, borderRadius: 15 }} variant=\"contained\" type='submit' onClick={handleSubmit}>Login</Button>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Profile.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Recipespage.js",["134"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_RECIPES } from '../utils/queries';\r\n\r\n// IMPORTANT FOR CLOUDINARY\r\n// import Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Recipespage = () => {\r\n    // THIS GRABS THE RECIPES CREATED BY THE USER OR AT LEAST IS MADE\r\n    // BY THE USER\r\n    const { loading, data } = useQuery(QUERY_RECIPES);\r\n    let recipes = data?.recipes || {};\r\n\r\n    // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\r\n    // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\r\n    // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\r\n    let uniqueRecipes = [];\r\n    for (let a = 0; a < recipes.length; a++) {\r\n        let exists = false;\r\n        for (let b = 0; b < uniqueRecipes.length; b++) {\r\n            if (recipes[a].title === uniqueRecipes[b].title) {\r\n                exists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!exists) {\r\n            uniqueRecipes.push(recipes[a]);\r\n        }\r\n    }\r\n     // console.log(\"uniqueRecipes\");\r\n    // console.log(uniqueRecipes);\r\n\r\n    const [ recipeslist, setRecipeslist ] = useState(['']);\r\n\r\n    useEffect(() => {\r\n        setRecipeslist(uniqueRecipes)\r\n    }, [recipes]);\r\n\r\n    console.log(\"recipeslist\");\r\n    console.log(recipeslist);\r\n\r\n    let filtered = [];\r\n    const handlefilter = async (event) => {\r\n        let recipecategory = event.target.value;\r\n        console.log(recipecategory);\r\n        filtered = uniqueRecipes.filter(recipe => recipe.category === recipecategory)\r\n\r\n        setRecipeslist(filtered);\r\n        // event.preventDefault();\r\n        // console.log(event.target.value);\r\n\r\n        // for (let a = 0; a < uniqueRecipes.length; a++) {\r\n        //     if (uniqueRecipes[a].category === event.target.value) {\r\n        //         filtered.push(uniqueRecipes[a]);\r\n        //         console.log(\"test\");\r\n        //         console.log(filtered);\r\n        //     }\r\n        // }\r\n        // console.log(\"test\");\r\n        // console.log(filtered);\r\n        // setRecipeslist(filtered);\r\n    }\r\n    // console.log(\"testlist\");\r\n    // console.log(filtered);\r\n    // console.log(\"newrecipelist\");\r\n    // console.log(recipeslist);\r\n\r\n    const handleShowAll = async () => {\r\n        setRecipeslist(uniqueRecipes);\r\n    };\r\n\r\n    if (loading) {\r\n        return <h1>Loading</h1>\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Grid sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <Typography sx={{ fontSize: 35, fontWeight: 'bold', position: 'absolute', background: 'white', p: 1.5, color: 'primary.dark', border:2, borderRadius: 10 }}>ALL DRINKS and RECIPES</Typography>\r\n                <Image width='100%' cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/c_scale,h_720,w_1270/v1637260922/headerimage1_abzfej.jpg\"/>\r\n            </Grid>\r\n            <Grid sx={{ background: '#F1FFFA', display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center', pt: 1, pb: 1 }}>\r\n                <Button variant=\"contained\" onClick={handleShowAll} color=\"info\" sx={{ fontSize: 13, m: 1}}>Show All</Button>\r\n                <Button variant=\"contained\" value=\"Drinks\" onClick={handlefilter} sx={{ fontSize: 13, m: 1}}>Drinks</Button>\r\n                <Button variant=\"contained\" value=\"Appetizer\" onClick={handlefilter} sx={{ fontSize: 13, m: 1 }}>Appetizers</Button>\r\n                <Button variant=\"contained\" value=\"Entree\" onClick={handlefilter} sx={{ fontSize: 13, m: 1 }}>Entrees</Button>\r\n                <Button variant=\"contained\" value=\"Dessert\" onClick={handlefilter} sx={{ fontSize: 13, m: 1 }}>Desserts</Button>\r\n            </Grid>\r\n\r\n            <Box sx={{ background: '#364156', display: 'flex', justifyContent: 'center', pt: 3, pb: 3 }}>\r\n                <Grid item xs={12} md={8.5} sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                    {recipeslist.map((recipe) => (\r\n                        <Grid item xs={11} md={2.4} sx={{ p: 1 }}>\r\n                            <Card>\r\n                                <Link to={`/recipes/${ recipe._id }`}>\r\n                                    <Grid>\r\n                                        <CardHeader\r\n                                            titleTypographyProps={{\r\n                                                fontSize: 20\r\n                                            }}\r\n                                            subheaderTypographyProps={{\r\n                                                fontSize: 15\r\n                                            }}\r\n                                            title={ recipe.title }\r\n                                            subheader={ recipe.createdAt }\r\n                                        />\r\n                                        <CardMedia sx={{ pl: 2, pr: 2, pt: 1, pb: 1 }}>\r\n                                            { recipe.imageid ? (\r\n                                                <Image\r\n                                                    width=\"100%\"\r\n                                                    cloudName=\"du119g90a\" \r\n                                                    public_id={ recipe.imageid }\r\n                                                />\r\n                                            ): (\r\n                                                <Image \r\n                                                    width=\"100%\"\r\n                                                    cloudName=\"du119g90a\" \r\n                                                    public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\r\n                                                />\r\n                                            )}\r\n                                        </CardMedia>\r\n                                        <CardContent>\r\n                                            <Typography sx={{ fontSize: 18 }}>Category: { recipe.category }</Typography>\r\n                                            <Typography sx={{ fontSize: 18 }}>Cuisine: { recipe.cuisine }</Typography>\r\n                                            <Typography sx={{ fontSize: 18 }}>Diet: { recipe.diettype }</Typography>\r\n                                            <Typography sx={{ fontSize: 18 }}>Servings: { recipe.servings } </Typography>\r\n                                            <Typography sx={{ fontSize: 18 }}>Total Time: { recipe.totalTime }</Typography>\r\n                                        </CardContent>\r\n                                    </Grid>\r\n                                </Link>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n    );\r\n        \r\n}\r\n\r\nexport default Recipespage;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Signup.js",["135","136","137"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n// MUI COMPONENTS FOR LOGIN AND SIGNUP\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nconst Signup = () => {\r\n    const [formState, setFormState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '', \r\n    });\r\n    \r\n    const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n              variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.addUser.token);\r\n        }   catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ background: '#006992', pt: 15, pb: 50 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 1.5 }}>\r\n          <Grid item sx={12} md={3}>\r\n            <Paper sx={{ display: 'flex', flexDirection: 'column', p: 3 }} elevation={3}>\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center', fontSize: 30 }}>\r\n                Sign Up\r\n              </Grid>\r\n              <TextField \r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }}\r\n                label=\"Username\" \r\n                variant=\"outlined\"                   \r\n                name=\"username\"\r\n                type=\"username\"\r\n                value={formState.username}\r\n                onChange={handleChange} \r\n              />\r\n              <TextField \r\n                id=\"outlined-basic\"\r\n                sx={{ m:3 }} \r\n                label=\"Email\" \r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}            \r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\" \r\n                sx={{ m:3 }}\r\n                label=\"Password\" \r\n                variant=\"outlined\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange} \r\n              />\r\n              <Grid sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button sx={{ width: 250, borderRadius: 15 }} variant=\"contained\" onClick={handleSubmit}>Sign Up</Button>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\Home.js",["138","139","140","141","142","143","144"],"import React, {useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_RECIPES } from '../utils/queries';\n\nimport { Image } from 'cloudinary-react';\n\n// THESE ARE FOR THE MUI COMPONENTS\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport { typography } from '@mui/system';\n\nconst Home = () => {\n\n  // THESE NEXT LINES SHOULD BE ABLE TO GET 10 RANDOMLY GENERATED USER\n  // CREATED RECIPES TO DISPLAY ON THE HOMEPAGE\n  // THIS WILL RANDOMLY PICK 10 RANDOM RECIPES MADE BY USERS TO SHOW ON THE HOMEPAGE\n  // THIS ACTS AS A TEASER OR A SAMPLE\n  const { loading, data } = useQuery(QUERY_RECIPES);\n  const recipes = data?.recipes || [];\n\n  // THESE SETS OF CODE SHOULD BE ABLE TO TAKE THE RECIPES SECTION AND\n  // CREATE A A NEW RECIPE ARRAY THAT HAS NO DUPLICATES BASED ON THE TITLE\n  // THIS CAN RAISE ANOTHER PROBLEM IF TITLES ARE THE SAME BUT ID IS NOT\n  const uniqueRecipes = [];\n  for (let a = 0; a < recipes.length; a++) {\n    let exists = false;\n    for (let b = 0; b < uniqueRecipes.length; b++) {\n      if (recipes[a].title === uniqueRecipes[b].title) {\n        exists = true;\n        break;\n      }\n    }\n    if (!exists) {\n      uniqueRecipes.push(recipes[a]);\n    }\n  };\n  // console.log(\"new\");\n  console.log(uniqueRecipes);\n\n  // THESE ARRAYS SHOULD HOLD RECIPES BASED ON THE CATEGORY\n  // THINK OF IT LIKE AN FILTERING\n  const drinks = [];\n  const drinknum = 5;\n  const appetizers =[];\n  const appnum = 4;\n  const entrees = [];\n  const entreesnum = 4;\n  const desserts = [];\n  const desnum = 5;\n  for (let a = 0; a < uniqueRecipes.length; a++) {\n    if (uniqueRecipes[a].category === \"Drinks\" && drinks.length < drinknum) {\n      drinks.push(uniqueRecipes[a])\n    }\n    if (uniqueRecipes[a].category === \"Appetizer\" && appetizers.length < appnum) {\n      appetizers.push(uniqueRecipes[a])\n    }\n    if (uniqueRecipes[a].category === \"Entree\" && entrees.length < entreesnum) {\n      entrees.push(uniqueRecipes[a])\n    }if (uniqueRecipes[a].category === \"Dessert\" && desserts.length < desnum) {\n      desserts.push(uniqueRecipes[a])\n    }\n  }\n\n\n  \n  return (\n    <div>\n      <Box sx={{ background: '#406e8e' }}>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n          <Typography sx={{ fontSize: 35, fontWeight: 'bold', position: 'absolute', background: '#cbf7ed', p: 3, color: 'primary.dark', border:1, borderRadius: 10 }}>Welcome to mmm!Book!!</Typography>\n          <Image width='100%' cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/c_scale,h_720,w_1270/v1637261149/headerimage0_djjzmj.jpg\"/>\n        </Box>\n        {/* THIS IS FOR DRINKS */}\n        <Grid container spacing={4} sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center', p: 2 }}>\n          {drinks.map((drink) => (\n            <Grid item xs={12} sm={6} lg={3.5}>\n              <Card sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: 225}}>\n                <Link to={`/recipes/${ drink._id }`}>\n                  <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <CardMedia sx={{ width: 150, p:1, pl: 3 }}>\n                      {drink.imageid ? (\n                        <Image \n                          width='100%'\n                          cloudName=\"du119g90a\"\n                          public_id={ drink.imageid }\n                        />\n                      ) : (\n                        <Image \n                          width='100%' \n                          cloudName=\"du119g90a\"\n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Box sx={{ p:2 }}>\n                      <Typography sx={{ fontSize: 20 }}>\n                        {drink.title}\n                      </Typography>\n                      <br/>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Category: {drink.category}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Cuisine: {drink.cuisine}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Diet: {drink.diettype}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Servings: {drink.servings}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Total Cook Time: {drink.totalTime} min\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      \n        <br /><br />\n        \n        {/* THIS IS FOR THE APPETIZERS*/}\n        <Grid container spacing={5} sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }} xs={12}>\n            {appetizers.map((appetizer) => (\n              <Grid item>\n                <Card sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: 300, height: 450}}>\n                  <Link to={`/recipes/${ appetizer._id }`}>\n                    <CardMedia sx={{ p: 2 }}>\n                      {appetizer.imageid ? (\n                        <Image\n                          width=\"100%\" \n                          cloudName=\"du119g90a\" \n                          public_id={ appetizer.imageid }\n                        />\n                      ) : ( \n                        <Image \n                          width=\"100%\"\n                          cloudName=\"du119g90a\" \n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Box sx={{ p:2, pl: 2.5, pr: 2.5 }}>\n                        <Typography sx={{ fontSize: 20 }}>\n                          {appetizer.title}\n                        </Typography>\n                        <br/>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Category {appetizer.category}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Cuisine: {appetizer.cuisine}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Diet: {appetizer.diettype}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Servings: {appetizer.servings}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Total Cook Time: {appetizer.totalTime} min\n                        </Typography>\n                      </Box>\n                  </Link>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n\n        <br /><br />\n          \n        {/* THIS IS FOR THE ENTREES*/}\n        <Grid container spacing={5} sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }} xs={12}>\n            {entrees.map((entree) => (\n              <Grid item>\n                <Card sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: 300, height: 450}}>\n                  <Link to={`/recipes/${ entree._id }`}>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n                      <CardMedia sx={{ p: 2 }}>\n                        {entree.imageid ? (\n                          <Image\n                            width=\"100%\" \n                            cloudName=\"du119g90a\" \n                            public_id={ entree.imageid }\n                          />\n                        ) : ( \n                          <Image \n                            width=\"100%\"\n                            cloudName=\"du119g90a\" \n                            public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                          />\n                        )}\n                      </CardMedia>\n                      <Box sx={{ p:2, pl: 2.5, pr: 2.5 }}>\n                        <Typography sx={{ fontSize: 20 }}>\n                          {entree.title}\n                        </Typography>\n                        <br/>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Category {entree.category}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Cuisine: {entree.cuisine}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Diet: {entree.diettype}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Servings: {entree.servings}\n                        </Typography>\n                        <Typography sx={{ fontSize: 15 }}>\n                          Total Cook Time: {entree.totalTime} min\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Link>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n        \n        <br /><br />\n        \n        {/* THIS IS FOR THE DESSERTS*/}\n        <Grid container spacing={5} sx={{ p:2, display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\n          {desserts.map((dessert) => (\n            <Grid item xs={12} sm={6} lg={3.5}>\n              <Card sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: 250}}>\n                <Link to={`/recipes/${ dessert._id }`}>\n                  <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n                    <CardMedia sx={{ width: 150, p:1, pl: 3 }}>\n                      {dessert.imageid ? (\n                        <Image \n                          width='100%'\n                          cloudName=\"du119g90a\"\n                          public_id={ dessert.imageid }\n                        />\n                      ) : (\n                        <Image \n                          width='100%' \n                          cloudName=\"du119g90a\"\n                          public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"\n                        />\n                      )}\n                    </CardMedia>\n                    <Box sx={{ p:2 }}>\n                      <Typography sx={{ fontSize: 20 }}>\n                        {dessert.title}\n                      </Typography>\n                      <br/>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Category {dessert.category}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Cuisine: {dessert.cuisine}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Diet: {dessert.diettype}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Servings: {dessert.servings}\n                      </Typography>\n                      <Typography sx={{ fontSize: 15 }}>\n                        Total Cook Time: {dessert.totalTime} min\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\CreateRecipe.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\SingleRecipe.js",["145","146"],"import React from 'react';\r\n// import { useEffect } from 'react';\r\n// import { useState } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n\r\nimport { ADD_RECIPE } from '../utils/mutations';\r\nimport { QUERY_SINGLE_RECIPE } from '../utils/queries';\r\nimport { QUERY_MYPROFILE } from '../utils/queries';\r\n\r\nimport { Image } from 'cloudinary-react';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n// MUI COMPONENTS\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst SingleRecipe = () => {\r\n    const { recipeId } = useParams();\r\n\r\n    const { loading, data } = useQuery(QUERY_SINGLE_RECIPE, {\r\n        variables: { recipeId: recipeId },\r\n    });\r\n    const recipe = data?.recipe || {};\r\n    console.log(recipe)\r\n    console.log(recipe.title);\r\n\r\n    // THIS SHOULD, ON PAPER ADD THE CURRENT OBJECT WHICH IS THE 'recipe'\r\n    // FROM ABOVE AND ADD TO THE USER THAT IS CURRENTLY LOGGED. THAT'S WHAT THE\r\n    // BELOW CODE SHOULD DO\r\n\r\n    // const [ addedrecipe , setAddedrecipe ] = useState({\r\n    //     title: 'hello'\r\n    // });\r\n    // console.log(\"testing\");\r\n    // console.log(addedrecipe);\r\n\r\n    const [addRecipe, { error }] = useMutation(ADD_RECIPE, {\r\n        update(cache, { data: { addRecipe } }) {\r\n\r\n            const { myprofile } = cache.readQuery({ query: QUERY_MYPROFILE });\r\n            cache.writeQuery({\r\n                query: QUERY_MYPROFILE,\r\n                data: { myprofile: {\r\n                    ...myprofile,\r\n                    recipes: [ ...myprofile.recipes, addRecipe]\r\n                }},\r\n            });\r\n        },\r\n    });\r\n\r\n    const handleAddto = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const { data } = await addRecipe({\r\n                variables: {\r\n                    ...recipe,\r\n                }\r\n            });\r\n\r\n            console.log(\"success\");\r\n        } catch (err) {\r\n            console.log(\"it didnt work\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div>\r\n            <Box sx={{ background: '#161925' }}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 3}}>\r\n                    <Grid item xs={12} md={8}>\r\n                    <Paper sx={{p: 2}}>\r\n                        <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center' }}>\r\n                            <Box sx={{ width: 325 }}>\r\n                                { recipe.imageid ? ( \r\n                                    <Image width='100%' cloudName=\"du119g90a\" public_id={recipe.imageid} />\r\n                                ) : (\r\n                                    <Image width='100%' cloudName=\"du119g90a\" public_id=\"https://res.cloudinary.com/du119g90a/image/upload/v1636841468/noimage_w8jxmo.jpg\"/>\r\n                                )}\r\n                            </Box>\r\n                            \r\n                            <Box sx={{ display: 'flex', flexDirection: 'column', pl: 3, pr: 2.5, width: 325 }}>\r\n                                <Typography sx={{ fontSize: 25 }}>{ recipe.title }</Typography>\r\n                                <br />\r\n                                <Typography sx={{ fontSize: 20 }}>Category: { recipe.category }</Typography>\r\n                                <Typography sx={{ fontSize: 20 }}>Servings: { recipe.servings }</Typography>\r\n                                <Typography sx={{ fontSize: 20 }}>Total Cook Time: { recipe.totalTime } mins</Typography>\r\n                                <Typography sx={{ fontSize: 20 }}>Cuisine: { recipe.cuisine }</Typography>\r\n                                <Typography sx={{ fontSize: 20 }}>Diet: { recipe.diettype }</Typography>\r\n                            </Box>  \r\n                        </Box>\r\n                        \r\n                        <br/>\r\n\r\n                        <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap',}}>\r\n                            <Box sx={{ width: 343, p: 1}}>\r\n                                <Typography sx={{ fontSize: 30 }}>Ingredients</Typography>\r\n                                {recipe.ingredients.map((ingredient) => (\r\n                                    <Typography sx={{ fontSize: 18, p: 0.7 }}>{ingredient}</Typography>\r\n                                ))}\r\n                            </Box>\r\n\r\n                            <br></br>\r\n                            \r\n                            <Box sx={{width: 350, p: 1 }}>\r\n                                <Typography sx={{ fontSize: 30 }}>Directions</Typography>\r\n                                {recipe.directions.map((direction) => (\r\n                                    <Typography sx={{ fontSize: 15, p: 0.7}}>{direction}</Typography>\r\n                                ))}\r\n                            </Box>\r\n                        </Box>\r\n                        {Auth.loggedIn() ? ( \r\n                            <>\r\n                                <Box>\r\n                                    <Button onClick={handleAddto} variant=\"contained\" color=\"error\">\r\n                                        <Typography sx={{ color: 'white', fontSize: 20 }}>Add to Cookbook</Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            </>\r\n                        ) : ( \r\n                            <>\r\n                            </>\r\n                        )}\r\n                    </Paper>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleRecipe;","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\Header\\index.js",["147","148","149","150","151","152","153","154"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\n// THESE ARE ALL MUI COMPONENTS\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button'\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"\">\n      <Box sx={{display: 'flex', flexDirection:'row', flexWrap: 'wrap', justifyContent: 'space-around', alignItems: 'flex-end', pt: 1, pb: 1}}>\n        <Box>\n          <Link to=\"/\">\n            <Typography sx={{ fontSize: 35, fontWeight: 'bold', color: 'primary.dark' }}>mmm!Book</Typography>\n          </Link>\n        </Box>\n        {Auth.loggedIn() ? (\n            <>\n              <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', pt: 1, pb: 1 }}>\n                <Link to=\"/recipes\">\n                  <Typography sx={{ fontSize: 15, fontWeight: 'bold', mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>Recipes</Typography>\n                </Link>\n                <Link className=\"\" to=\"/add\">\n                  <Typography sx={{ fontSize: 15, fontWeight: 'bold', mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>Add Recipe</Typography>\n                </Link>\n                <Link className=\"\" to=\"/myprofile\">\n                  <Typography sx={{ fontSize: 15, fontWeight: 'bold', mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>My Cookbook</Typography>\n                </Link>\n                <Link className=\"\" onClick={logout} to=\"/\">\n                 <Typography sx={{ fontSize: 15, fontWeight: 'bold', mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>Log Out</Typography>\n                </Link>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', pt: 1, pb: 1 }}>\n                <Link to=\"/recipes\">\n                  <Typography sx={{ fontSize: 17, mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>Recipes</Typography>\n                </Link>\n                <Link className=\"\" to=\"/login\">\n                  <Typography sx={{ fontSize: 17, mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>Log In</Typography>\n                </Link>\n                <Link className=\"\" to=\"/signup\">\n                    <Typography sx={{ fontSize: 17, mr: .7, ml: .7, color: 'primary.dark', fontWeight: 'bold' }}>Sign Up </Typography>\n                </Link>\n              </Box>\n            </>\n          )}\n      </Box>\n    </header>\n  );\n};\n\nexport default Header;\n","C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\queries.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\utils\\auth.js",[],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\components\\RecipeForm\\index.js",["155","156"],"C:\\Users\\Justin\\Desktop\\Coding\\MyCookBook\\client\\src\\pages\\UpdateRecipe.js",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"158","replacedBy":"162"},{"ruleId":"160","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":14},{"ruleId":"164","severity":1,"message":"168","line":19,"column":21,"nodeType":"166","messageId":"167","endLine":19,"endColumn":26},{"ruleId":"164","severity":1,"message":"169","line":19,"column":28,"nodeType":"166","messageId":"167","endLine":19,"endColumn":32},{"ruleId":"170","severity":1,"message":"171","line":53,"column":8,"nodeType":"172","endLine":53,"endColumn":17,"suggestions":"173"},{"ruleId":"164","severity":1,"message":"165","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"168","line":24,"column":23,"nodeType":"166","messageId":"167","endLine":24,"endColumn":28},{"ruleId":"164","severity":1,"message":"169","line":24,"column":30,"nodeType":"166","messageId":"167","endLine":24,"endColumn":34},{"ruleId":"164","severity":1,"message":"174","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"175","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":35},{"ruleId":"164","severity":1,"message":"176","line":13,"column":8,"nodeType":"166","messageId":"167","endLine":13,"endColumn":18},{"ruleId":"164","severity":1,"message":"177","line":15,"column":8,"nodeType":"166","messageId":"167","endLine":15,"endColumn":19},{"ruleId":"164","severity":1,"message":"178","line":17,"column":8,"nodeType":"166","messageId":"167","endLine":17,"endColumn":19},{"ruleId":"164","severity":1,"message":"179","line":18,"column":10,"nodeType":"166","messageId":"167","endLine":18,"endColumn":20},{"ruleId":"164","severity":1,"message":"180","line":26,"column":11,"nodeType":"166","messageId":"167","endLine":26,"endColumn":18},{"ruleId":"164","severity":1,"message":"168","line":44,"column":25,"nodeType":"166","messageId":"167","endLine":44,"endColumn":30},{"ruleId":"164","severity":1,"message":"169","line":62,"column":21,"nodeType":"166","messageId":"167","endLine":62,"endColumn":25},{"ruleId":"164","severity":1,"message":"181","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":19},{"ruleId":"164","severity":1,"message":"182","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":14},{"ruleId":"164","severity":1,"message":"183","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":14},{"ruleId":"164","severity":1,"message":"184","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":32,"column":110,"nodeType":"187","messageId":"188","endLine":32,"endColumn":120},{"ruleId":"185","severity":1,"message":"186","line":35,"column":110,"nodeType":"187","messageId":"188","endLine":35,"endColumn":120},{"ruleId":"185","severity":1,"message":"186","line":38,"column":110,"nodeType":"187","messageId":"188","endLine":38,"endColumn":120},{"ruleId":"185","severity":1,"message":"186","line":41,"column":109,"nodeType":"187","messageId":"188","endLine":41,"endColumn":119},{"ruleId":"164","severity":1,"message":"168","line":147,"column":25,"nodeType":"166","messageId":"167","endLine":147,"endColumn":30},{"ruleId":"164","severity":1,"message":"169","line":172,"column":21,"nodeType":"166","messageId":"167","endLine":172,"endColumn":25},{"ruleId":"170","severity":1,"message":"189","line":31,"column":11,"nodeType":"190","endLine":31,"endColumn":38},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uniqueRecipes'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'typography' is defined but never used.","'loading' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","no-dupe-keys","Duplicate key 'fontWeight'.","ObjectExpression","unexpected","The 'recipe' logical expression could make the dependencies of useEffect Hook (at line 61) change on every render. To fix this, wrap the initialization of 'recipe' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},"Update the dependencies array to be: [recipes, uniqueRecipes]",{"range":"196","text":"197"},[1811,1820],"[recipes, uniqueRecipes]"]